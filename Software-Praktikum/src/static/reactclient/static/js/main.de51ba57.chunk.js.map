{"version":3,"sources":["API/BusinessObject.js","API/GroupBO.js","API/ProfileBO.js","API/MessageBO.js","API/ChatroomBO.js","API/ChataccessBO.js","API/RequestBO.js","API/UserBO.js","API/LernappAPI.js","Components/Pages/MatchListEntry.js","Components/Pages/MatchList.js","Components/Dialog/DeleteRequest.js","Components/Pages/RequestListEntry.js","Components/Dialog/DeleteGroupRequest.js","Components/Pages/RequestGroupListEntry.js","Components/Pages/RequestList.js","Components/Message.js","Components/Chatroom.js","Components/ChatListEntry.js","Components/Dialog/LoadingProgress.js","Components/ChatList.js","Components/Dialog/ProfileDropDown.js","Components/Layout/Header.js","Components/GroupListEntryAll.js","Components/Dialog/AddGroup.js","Components/GroupList.js","Components/Dialog/LeaveGroup.js","Components/MemberListEntry.js","Components/Dialog/AddMember.js","Components/MemberList.js","Components/Dialog/GroupEditDialog.js","Components/GroupListEntry.js","Components/GroupListForProfile.js","Components/Dialog/DeleteProfile.js","Components/Dialog/UserProfileDialog.js","Components/Pages/ProfileOperations.js","Components/Pages/SignIn.js","firebaseConfig.js","Components/Dialog/ContextErrorMessage.js","App.js","index.js"],"names":["BusinessObject","this","id","aId","result","prop","GroupBO","groupname","admin","description","chatid","group","Array","isArray","forEach","c","Object","setPrototypeOf","prototype","push","ProfileBO","aFirstname","aLastname","aAge","aSemester","aMajor","aHobbys","aInterests","aPersonality","aLearnstyle","aStudytime","aStudyplace","aStudyfrequence","aWorkexperience","last_name","first_name","age","semester","major","hobbys","interests","personality","learn_style","study_time","study_place","study_frequence","work_experience","profile","MessageBO","profile_id","room","text","message","ChatroomBO","chattype","chatroom","ChataccessBO","chataccess","RequestBO","Arequested_by","Arequested","Arequest_type","Agroup_id","requested_by","requested","request_type","group_id","request","UserBO","name","email","user_id","user","LernappAPI","id1","memberName","url","init","fetch","then","res","ok","Error","status","statusText","json","getAllRequests","responseJSON","RequestBOs","fromJSON","console","log","Promise","resolve","UserBOs","GroupBOs","method","headers","body","JSON","stringify","responseChatroom","them","methode","groupBO","responseGroupBO","chataccessMemberBO","responsechataccessBO","profileID","responseChataccessBO","roomID","profileBOs","memberBOs","getID","responsegroupBO","responseChataccess","groupID","messageBO","responseMessage","profileBO","responseProfileBO","requestBOs","requestBO","info","ID1","responseRequestBO","currentUser","MatchListEntry","props","addProfileRequest","data","googleId","newRequest","state","matches","getAPI","addRequest","profiles","Typography","getFirstname","getLastname","getLearnstyle","getStudytime","getStudyplace","getStudyfrequence","Button","color","flex","onClick","Component","MatchList","getMatchmaker","getMatches","setState","Grid","item","map","withStyles","theme","root","width","DeleteRequest","deleteRequest","deletingInProgress","deletingError","onClose","catch","e","deleteGroupRequest","requestGroup","handleClose","Dialog","open","show","DialogTitle","DialogContent","DialogContentText","DialogActions","RequestListEntry","deleteRequestDialogClosed","onRequestDeleted","showDeleteRequest","deleteRequestButtonClicked","event","stopPropagation","getProfileById","getProfile","profileLastName","profileFirstName","requests","tabindex","newRoom","addChatroom","getLatestChatroom","access","access2","getRequestedBy","addChataccess","size","newChat","className","RequestGroupListEntry","onGroupRequestDeleted","showDeleteGroupRequest","getGroupById","getGroup","getGroupId","Tabs","indicatorColor","textColor","centered","value","onChange","changeTab","Tab","label","component","RouterLink","to","DeleteGroupRequest","RequestList","requestAdded","newGroupList","groups","filter","groupFromState","filteredGroups","getRequestForProfile","getRequestForGroups","requestDeleted","newRequestList","requestFromState","groupRequestDeleted","groupRequests","Message","getUserName","messages","get_profile_id","classes","ListItem","chatEntry","get_text","Chatroom","newMessage","loadingInProgress","error","List","messageHistory","ChatlistEntry","getNameOfChat","roomtype","chats","getChatType","getChatpartner","roomnumber","getGroupname","getMessages","getMessageByRoom","messageBOs","sendMessageButtonClicked","addMessage","messageInputChange","target","interval","setInterval","Accordion","AccordionSummary","expandIcon","AccordionDetails","TextField","type","variant","defaultValue","sendButton","margin","LoadingProgress","LinearProgress","marginTop","spacing","ChatList","getChats","getChataccessByProfile","ChatroomBOs","ChatListEntry","ProfileDropDown","createRef","handleAvatarButtonClick","handleSignOutButtonClicked","firebase","auth","signOut","IconButton","avatarButton","ref","Avatar","src","photoURL","Popover","anchorEl","current","anchorOrigin","vertical","horizontal","transformOrigin","ClickAwayListener","onClickAway","Paper","profileBox","align","Divider","divider","displayName","container","justify","float","padding","background","palette","default","Header","newIndex","GroupListEntry","makeStyles","maxWidth","backgroundColor","paper","position","overflow","maxHeight","listSection","ul","addGroupRequest","getAdmin","showAddGroup","groupName","aria-controls","getDescription","buttonMargin","marginRight","groupEntry","fontSize","typography","pxToRem","flexBasis","flexShrink","AddGroup","handleChange","addGroup","newGroup","closeLeaveGroupDialog","groupAdded","showLeaveGroup","onSubmit","GroupList","getAllGroups","groupBOs","loadingError","filterFieldValueChange","toLowerCase","includes","groupFilter","addGroupButtonClicked","addGroupDialogClosed","onAddGroup","prevProps","prevState","snapshot","alignItems","xs","autoFocus","fullWidth","GroupListEntryAll","groupList","marginBottom","addGroupButton","right","bottom","LeaveGroup","leaveGroup","deleteTargetedChataccess","getChatid","MemberListEntry","members","memberEntry","AddMember","addmember","targetMember","selectedMember","length","required","textFieldValueChange","onBlur","searchMember","InputProps","endAdornment","InputAdornment","select","memberSelectionChange","member","MenuItem","disabled","addMember","MemberList","getMembers","getMembersForGroup","a","val","newChataccess","closeAddMemberDialog","addMemberButtonclicked","showAddMember","accountList","addMemberButton","startIcon","GroupEditDialog","updateGroup","updatedGroup","assign","setGroupname","setAdmin","parseInt","setDescription","setChatid","baseState","noValidate","autoComplete","Box","Textfield","textAlign","leaveGroupclicked","editGroupButtonClicked","showGroupEditDialog","groupEditDialogClosed","onLeaveGroup","GroupListForProfile","getGroupsForProfile","DeleteProfile","deleteProfile","UserProfileDialog","PersoProfil","FormControl","Select","InputLabel","labelId","hobbies","FormLabel","RadioGroup","aria-label","row","FormControlLabel","control","Radio","LernoProfil","updateProfile","borderRadius","border","ProfileOperations","getAge","getSemester","getMajor","getHobbys","getInterests","getPersonality","getWorkexperience","deleteButtonClicked","showDeleteProfile","closeDeleteDialog","editButtonClicked","showEditProfile","closeEditDialog","updatedProfile","setLastname","setFirstname","setAge","setSemester","setMajor","setHobbys","setInterests","setPersonality","setLearnstyle","setStudytime","setStudyplace","setStudyfrequence","setWorkexperience","profil","SignIn","handleSignInButtonClicked","onSignIn","direction","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","ContextErrorMessage","contextErrorMsg","onReload","Alert","severity","AlertTitle","margins","App","handleAuthStateChange","authLoading","getIdToken","token","document","cookie","uid","authError","getUserId","handleSignIn","provider","GoogleAuthProvider","signInWithRedirect","getUserByGoogleUserId","userBO","appError","initializeApp","languageCode","onAuthStateChanged","Container","from","path","exact","React","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.de51ba57.chunk.js","sourcesContent":["/**\r\n * Basisklasse für alle BusinessObjects, für die standardmäßig eine ID angegeben ist\r\n */\r\n export default class BusinessObject {\r\n\r\n    /**\r\n     * The null constructor.\r\n     */\r\n    constructor() {\r\n      this.id = 0;\r\n    }\r\n  \r\n    /**\r\n     * Setzt ID des Businessobjekts.\r\n     * \r\n     * @param {*} aId - neue ID für Businessobjekt.\r\n     */\r\n    setID(aId) {\r\n      this.id = aId;\r\n    }\r\n  \r\n    /**\r\n     * Gibt die ID des Businessobjekts zurück.\r\n     */\r\n    getID() {\r\n      return this.id;\r\n    }\r\n  \r\n    /**\r\n     * Gibt einen representativen String des Objekts zurück.\r\n     */\r\n    toString() {\r\n      let result = '';\r\n      for (var prop in this) {\r\n        result += prop + ': ' + this[prop] + ' ';\r\n      }\r\n      return result;\r\n    }\r\n  }","import BusinessObject from \"./BusinessObject.js\"\r\n\r\n/**\r\n *  @author [Khadidja Kebaili](https://github.com/Khadidja-Kebaili)\r\n *  @coauthor: [Lena Tolamtschow] (https://github.com/LenaTolmatschow)\r\n */\r\n\r\nexport default class GroupBO extends BusinessObject{\r\n\r\n    /**\r\n     *\r\n     * @param {string} groupname - Id einer ProfileBO\r\n     * @param {int} admin - Id des Admins\r\n     * @param {string} description - Gruppenbeschreibung\r\n     * @param {int} chatid - ID des zugegörigen Chatrooms.\r\n     */\r\n\r\n    constructor(groupname, admin, description, chatid) {\r\n        super();\r\n        this.groupname = groupname\r\n        this.admin = admin\r\n        this.description = description\r\n        this.chatid = chatid\r\n\r\n    }\r\n\r\n    /**\r\n     * Setzt Gruppenname\r\n     */\r\n\r\n    setGroupname(groupname) {\r\n        this.groupname = groupname;\r\n    }\r\n\r\n    /**\r\n     * Gibt Gruppennamen zurück\r\n     */\r\n\r\n    getGroupname() {\r\n        return this.groupname;\r\n    }\r\n\r\n    /**\r\n     * Setzt Gruppenadmin\r\n     * @param admin\r\n     */\r\n    setAdmin (admin) {\r\n        this.admin = admin;\r\n    }\r\n\r\n    /**\r\n     * Gibt Gruppenadmin zurück\r\n     * @returns {Number}\r\n     */\r\n    getAdmin() {\r\n        return this.admin;\r\n    }\r\n\r\n    /**\r\n     * Setzt Gruppenbeschreibung\r\n     * @param description\r\n     */\r\n    setDescription (description) {\r\n        this.description = description;\r\n    }\r\n\r\n    /**\r\n     * gibt Gruppenbeschreibung zurück\r\n     * @returns {string}\r\n     */\r\n    getDescription() {\r\n        return this.description;\r\n    }\r\n\r\n    /**\r\n     * Setzt die zugehörige Chatid\r\n     * @param chatid\r\n     */\r\n    setChatid (chatid) {\r\n        this.chatid = chatid;\r\n    }\r\n\r\n    /**\r\n     * Gibt zugehörige Chatid zurück\r\n     * @returns {Number}\r\n     */\r\n    getChatid() {\r\n        return this.chatid;\r\n    }\r\n\r\n    /**\r\n     * Nimmt JSON-Objekte und wandelt sie in einen Array um mit GroupBOs.\r\n     * @param group\r\n     * @returns {[GroupBO]}\r\n     */\r\n    static fromJSON(group) {\r\n        let result = [];\r\n\r\n        if (Array.isArray(group)) {\r\n            group.forEach((c) => {\r\n                Object.setPrototypeOf(c, GroupBO.prototype);\r\n                result.push(c);\r\n            })\r\n        } else {\r\n            // Es handelt sich offenbar um ein singuläres Objekt\r\n            let c = group;\r\n            Object.setPrototypeOf(c, GroupBO.prototype);\r\n            result.push(c);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n","import BusinessObject from \"./BusinessObject.js\";\r\n\r\n/**\r\n * @author [Mihriban Dogan](https://github.com/mihriban-dogan)\r\n */\r\n\r\n\r\n//Repräsentiert ein Profil\r\n\r\nexport default class ProfileBO extends BusinessObject {\r\n\r\n  \r\n  /**\r\n   * @param {*} aFirstname- Vorname des Profils\r\n   * @param {*} aLastname - Nachname des Profils\r\n   * @param {*} aAge - Alter des Profils\r\n   * @param {*} aSemester- Das Semester, in dem sich der Student momentan befindet\r\n   * @param {*} aMajor - Der Studiengang, den der Student belegt\r\n   * @param {*} aHobbys- Die Hobbies des Studierenden\r\n   * @param {*} aInterests - Die Interessen des Studierenden\r\n   * @param {*} aPersonality - Wie extrovertiert/introvertiert der Studierende ist von 1-5\r\n   * @param {*} aLearnstyle- Der Lerntyp des Studenten z.B. visuell etc.\r\n   * @param {*} aStudytime - Die Bevorzugte Lernzeit des Studenten (morgens, mittags, abends)\r\n   * @param {*} aStudyplace - Der Bevorzugte Lernort des Studenten (Uni, Online)\r\n   * @param {*} aStudyfrequence- Wie oft der Student in der Woche lernen/sich treffen will (1-7)\r\n   * @param {*} aWorkexperience  - Ob der Student bereits Berufserfahrung besitzt\r\n   * \r\n   */\r\n\r\n  constructor(aFirstname, aLastname, aAge, aSemester, aMajor, aHobbys, aInterests, aPersonality, aLearnstyle, aStudytime, aStudyplace, aStudyfrequence, aWorkexperience ) {\r\n    super();\r\n    this.last_name = aLastname;\r\n    this.first_name = aFirstname;\r\n    this.age =  aAge;\r\n    this.semester = aSemester;\r\n    this.major = aMajor;\r\n    this.hobbys = aHobbys;\r\n    this.interests = aInterests;\r\n    this.personality = aPersonality;\r\n    this.learn_style = aLearnstyle;\r\n    this.study_time = aStudytime;\r\n    this.study_place = aStudyplace;\r\n    this.study_frequence = aStudyfrequence;\r\n    this.work_experience = aWorkexperience\r\n  }\r\n\r\n  //Hier folgen die Setters und Getters für die einzelnen Parameter\r\n\r\n \r\n  setFirstname(aFirstname) {\r\n    this.first_name = aFirstname;\r\n  }\r\n\r\n\r\n  getFirstname() {\r\n    return this.first_name;\r\n  }\r\n\r\n  setLastname(aLastname) {\r\n    this.last_name = aLastname;\r\n  }\r\n\r\n \r\n  getLastname() {\r\n    return this.last_name;\r\n  }\r\n\r\n  setAge(aAge) {\r\n    this.age = aAge;\r\n  }\r\n\r\n  getAge() {\r\n    return this.age;\r\n  }\r\n\r\n  setSemester(aSemester) {\r\n    this.semester = aSemester;\r\n  }\r\n\r\n \r\n  getSemester() {\r\n    return this.semester;\r\n  }\r\n\r\n  setMajor(aMajor) {\r\n    this.major = aMajor;\r\n  }\r\n\r\n \r\n  getMajor() {\r\n    return this.major;\r\n  }\r\n\r\n  setHobbys(aHobbys) {\r\n    this.hobbys = aHobbys;\r\n  }\r\n\r\n \r\n  getHobbys() {\r\n    return this.hobbys;\r\n  }\r\n\r\n  setInterests(aInterests) {\r\n    this.interests = aInterests;\r\n  }\r\n\r\n \r\n  getInterests() {\r\n    return this.interests;\r\n  }\r\n\r\n  setPersonality(aPersonality) {\r\n    this.personality = aPersonality;\r\n  }\r\n\r\n \r\n  getPersonality() {\r\n    return this.personality;\r\n  }\r\n\r\n  setLearnstyle(aLearnstyle) {\r\n    this.learn_style = aLearnstyle;\r\n  }\r\n\r\n \r\n  getLearnstyle() {\r\n    return this.learn_style;\r\n  }\r\n\r\n  setStudytime(aStudytime) {\r\n    this.study_time = aStudytime;\r\n  }\r\n\r\n \r\n  getStudytime() {\r\n    return this.study_time;\r\n  }\r\n\r\n  setStudyfrequence (aStudyfrequence) {\r\n    this.study_frequence = aStudyfrequence;\r\n  }\r\n\r\n \r\n  getStudyfrequence() {\r\n    return this.study_frequence;\r\n  }\r\n\r\n  setStudyplace(aStudyplace) {\r\n    this.study_place = aStudyplace;\r\n  }\r\n\r\n \r\n  getStudyplace() {\r\n    return this.study_place;\r\n  }\r\n\r\n  setWorkexperience(aWorkexperience) {\r\n    this.work_experience = aWorkexperience;\r\n  }\r\n\r\n \r\n  getWorkexperience() {\r\n    return this.work_experience;\r\n  }\r\n\r\n\r\n\r\n\r\n  static fromJSON(profile) {\r\n    let result = [];\r\n\r\n    if (Array.isArray(profile)) {\r\n      profile.forEach((c) => {\r\n        Object.setPrototypeOf(c, ProfileBO.prototype);\r\n        result.push(c);\r\n      })\r\n    } else {\r\n      let c = profile;\r\n      Object.setPrototypeOf(c, ProfileBO.prototype);\r\n      result.push(c);\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n","import BusinessObject from './BusinessObject';\r\n\r\n/**\r\n * Die einzelnen Nachrichten eines Chatraums als BO\r\n * \r\n * @author [Ha Mi Duong](https://github.com/HamiDuong)\r\n */\r\nexport default class MessageBO extends BusinessObject {\r\n\r\n    /**\r\n     * \r\n     * @param {int} profile_id - Id der Person welche die Nachricht geschrieben hat\r\n     * @param {int} room - Raum in dem die MessageBO ist\r\n     * @param {string} text - Text der Nachricht\r\n     */\r\n    constructor(profile_id, room, text){\r\n        super();\r\n        this.profile_id = profile_id;\r\n        this.room = room;\r\n        this.text = text;\r\n    }\r\n\r\n    //Getter und Setter Methoden für die Objekte der Klasse MessageBO\r\n    set_profile_id(id){\r\n        this.profile_id = id;\r\n    }\r\n\r\n    get_profile_id(){\r\n        return this.profile_id;\r\n    }\r\n\r\n    set_room(id){\r\n        this.room = id;\r\n    }\r\n\r\n    get_room(){\r\n        return this.room;\r\n    }\r\n\r\n    set_text(text){\r\n        this.text = text;\r\n    }\r\n\r\n    get_text(){\r\n        return this.text;\r\n    }\r\n\r\n    static fromJSON(message){\r\n        let result = [];\r\n\r\n        if(Array.isArray(message)){\r\n            message.forEach((c) => {\r\n                Object.setPrototypeOf(c, MessageBO.prototype);\r\n                result.push(c);\r\n            })\r\n        }else{\r\n            let c = message;\r\n            Object.setPrototypeOf(c, MessageBO.prototype);\r\n            result.push(c);\r\n        }\r\n        return result;\r\n    }\r\n}","import BusinessObject from './BusinessObject';\r\n\r\n/**\r\n * Bei der Komponente Chatraum wird zwischen Gruppenchats und Zweiterchats underschieden anhand des Chattypes\r\n * E: Zweierchat\r\n * G: Gruppenchat\r\n * \r\n * @author [Ha Mi Duong](https://github.com/HamiDuong)\r\n */\r\n\r\nexport default class ChatroomBO extends BusinessObject {\r\n\r\n    /**\r\n     * \r\n     * @param {string} chattype - Art des Chatraums (Gruppen oder Zweier)\r\n     */\r\n    constructor(chattype){\r\n        super();\r\n        this.chattype = chattype;\r\n    }\r\n\r\n    setChatType(chattype){\r\n        this.chattype = chattype\r\n    }\r\n\r\n    getChatType(){\r\n        return this.chattype\r\n    }\r\n\r\n    static fromJSON(chatroom){\r\n        let result = [];\r\n\r\n        if(Array.isArray(chatroom)){\r\n            chatroom.forEach((c) => {\r\n                Object.setPrototypeOf(c, ChatroomBO.prototype);\r\n                result.push(c);\r\n            })\r\n        }else{\r\n            let c = chatroom;\r\n            Object.setPrototypeOf(c, ChatroomBO.prototype);\r\n            result.push(c);\r\n        }\r\n        return result;\r\n    }\r\n}","import BusinessObject from './BusinessObject';\r\n\r\n/**\r\n * Stellt da, welches Profil auf welchen Chatraum zugreifen kann\r\n * Bei den Chaträumen wird dabei unter Gruppenchaträume und Zweierchaträume aufgeteilt\r\n * E: Zweierchat\r\n * G: Gruppenchat\r\n * Gleichzeitig wird Chataccess dafür genutzt, die Mitglieder einer Gruppe zu finden\r\n * \r\n * @author [Ha Mi Duong](https://github.com/HamiDuong)\r\n */\r\n\r\nexport default class ChataccessBO extends BusinessObject {\r\n\r\n    /**\r\n     * \r\n     * @param {int} profile_id - Id einer ProfileBO\r\n     * @param {int} room - Id einer ChatroomBO\r\n     * @param {string} chattype - Art des Chatraums (Gruppen oder Zweier)\r\n     */\r\n    constructor(profile_id, room, chattype){\r\n        super();\r\n        this.profile_id = profile_id;\r\n        this.room = room;\r\n        this.chattype = chattype;\r\n    }\r\n\r\n    set_profile_id(id){\r\n        this.profile_id = id;\r\n    }\r\n\r\n    get_profile_id(){\r\n        return this.profile_id;\r\n    }\r\n\r\n    set_room(id){\r\n        this.room = id;\r\n    }\r\n\r\n    get_room(){\r\n        return this.room;\r\n    }\r\n\r\n    set_chattype(chattype){\r\n        this.chattype = chattype;\r\n    }\r\n\r\n    get_chattype(){\r\n        return this.chattype;\r\n    }\r\n \r\n    static fromJSON(chataccess){\r\n        let result = [];\r\n\r\n        if(Array.isArray(chataccess)){\r\n            chataccess.forEach((c) => {\r\n                Object.setPrototypeOf(c, ChataccessBO.prototype);\r\n                result.push(c);\r\n            })\r\n        }else{\r\n            let c = chataccess;\r\n            Object.setPrototypeOf(c, ChataccessBO.prototype);\r\n            result.push(c);\r\n        }\r\n        return result;\r\n    }\r\n}","import BusinessObject from \"./BusinessObject.js\"\r\n\r\n/**\r\n * Ertsellt für die einzelnen Request, die sich in RequestListEntry, RequestGroupEntryList, RequestList, \r\n * MatchListEnty und GroupListEntry all\r\n * Soll bei der Anzeige von Requests dienen,\r\n * aber auch bei hinzufügen von den Request (Anfrage senden)\r\n * \r\n * \r\n * @author [Esra Özkul (geb.Copuro)](https://github.com/EsraCopuro)\r\n */\r\n\r\n\r\nexport default class RequestBO extends BusinessObject {\r\n    constructor(Arequested_by, Arequested,Arequest_type, Agroup_id) {\r\n      super();\r\n      \r\n      /**\r\n     * @param {int} requested_by - Der User der eine Anfrage gesendet hat, nur der ID wird angezeigt\r\n     * @param {int} requested - Der User der angefragt wurde von einem anderen User, auch wieder nur eine ID\r\n     * @param {string} request_type - Der Requesttype kann entweder E = \"Einzelchatraum\" oder G = \"Gruppenchatraum\" stehen\r\n     * @param {int} group_id - Die Gruppen ID wird hier eingetragen --> GroupBO; Nur für Gruppenchaträum gespeichert\r\n     */\r\n\r\n      this.requested_by = Arequested_by;\r\n      this.requested = Arequested;\r\n      this.request_type = Arequest_type;\r\n      this.group_id = Agroup_id\r\n    }\r\n\r\n    setRequestedBy(Arequested_by){\r\n      this.requested_by = Arequested_by;\r\n    }\r\n\r\n    getRequestedBy(){\r\n    return this.requested_by;\r\n    }\r\n\r\n    setGroupId(Agroup_id){\r\n        this.group_id = Agroup_id;\r\n    }\r\n\r\n    getGroupId(){\r\n        return this.group_id;\r\n    }\r\n\r\n    setRequested(Arequested){\r\n        this.requested = Arequested;\r\n    }\r\n\r\n    getRequested(){\r\n        return this.requested\r\n    }\r\n\r\n    setRequestType(Arequest_type){\r\n        this.request_type = Arequest_type\r\n    }\r\n\r\n    getRequestType(){\r\n        return this.request_type\r\n    }\r\n\r\n    static fromJSON(request) {\r\n        let result = [];\r\n\r\n        if (Array.isArray(request)) {\r\n          request.forEach((c) => {\r\n            Object.setPrototypeOf(c, RequestBO.prototype);\r\n            result.push(c);\r\n          })\r\n        } else {\r\n          // Es handelt sich offenbar um ein singuläres Objekt\r\n          let c = request;\r\n          Object.setPrototypeOf(c, RequestBO.prototype);\r\n          result.push(c);\r\n        }\r\n\r\n        return result;\r\n      }\r\n    }","import BusinessObject from \"./BusinessObject.js\"\r\n\r\n/**\r\n * @author [Mihriban Dogan](https://github.com/mihriban-dogan)\r\n */\r\n\r\nexport default class UserBO extends BusinessObject{\r\n    /**\r\n   * @param {*} name- Name des Users\r\n   * @param {*} email - Google-Email des Users\r\n   * @param {*} user_id- die User ID\r\n   */\r\n\r\n    constructor(name, email, user_id) {\r\n        super();\r\n        this.name = name\r\n        this.email = email\r\n        this.user_id = user_id\r\n\r\n    }\r\n    //Hier folgen die Setter und Getter der einzelnen Parameter\r\n\r\n    setName(name) {\r\n        this.name = name;\r\n    }\r\n\r\n    getName() {\r\n        return this.name;\r\n    }\r\n\r\n    setEmail (email) {\r\n        this.email = email;\r\n    }\r\n\r\n    getEmail() {\r\n        return this.email;\r\n    }\r\n\r\n    setUser_id (user_id) {\r\n        this.user_id = user_id;\r\n    }\r\n\r\n    getUser_id() {\r\n        return this.user_id;\r\n    }\r\n\r\n\r\n    static fromJSON(user) {\r\n        let result = [];\r\n\r\n        if (Array.isArray(user)) {\r\n            user.forEach((c) => {\r\n                Object.setPrototypeOf(c, UserBO.prototype);\r\n                result.push(c);\r\n            })\r\n        } else {\r\n            let c = user;\r\n            Object.setPrototypeOf(c, UserBO.prototype);\r\n            result.push(c);\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n","import GroupBO from \"./GroupBO\";\r\nimport ProfileBO from \"./ProfileBO\";\r\nimport MessageBO from './MessageBO';\r\nimport ChatroomBO from './ChatroomBO';\r\nimport ChataccessBO from './ChataccessBO';\r\nimport RequestBO from \"./RequestBO\";\r\nimport UserBO from \"./UserBO\";\r\n\r\n\r\nexport default class LernappAPI {\r\n\r\n    static #api = null;\r\n\r\n\r\n    #lernappServerBaseURL = '/api';\r\n\r\n    //Group\r\n\r\n    #addGroupURL = () => `${this.#lernappServerBaseURL}/group`;\r\n    #getGroupURL = (id) => `${this.#lernappServerBaseURL}/group/${id}`;\r\n    // #deleteGroupURL = (id) =>`${this.#lernappServerBaseURL}/group/${id}`;\r\n    #getAllGroupsURL = () => `${this.#lernappServerBaseURL}/group`;\r\n    #get_Groups_of_ProfileURL = (id) => `${this.#lernappServerBaseURL}/groups_of_profile/${id}`;\r\n    #addMemberURL = () => `${this.#lernappServerBaseURL}/chataccess_new_member`;\r\n    #leaveGroupURL = (id) => `${this.#lernappServerBaseURL}/chataccess/${id}`;\r\n    #getMembersForGroupURL = (id) => `${this.#lernappServerBaseURL}/chataccess_member/${id}`;\r\n    #updateGroupURL = (id) => `${this.#lernappServerBaseURL}/group/${id}`;\r\n\r\n\r\n    //Chatroom\r\n\r\n    #addChatroomURL = () => `${this.#lernappServerBaseURL}/chatroom`;\r\n    #getAllChatroomURL = () => `${this.#lernappServerBaseURL}/chatroom`;\r\n    #getChatroomURL = (id) => `${this.#lernappServerBaseURL}/chatroom/${id}`;\r\n    #deleteChatroomURL = (id) => `${this.#lernappServerBaseURL}/chatroom/${id}`;\r\n    #updateChatroomURL = (id) => `${this.#lernappServerBaseURL}/chatroom/${id}`;\r\n    #getLatestChatroomURL = () => `${this.#lernappServerBaseURL}/singlechatroom`;\r\n   \r\n\r\n    //Request\r\n\r\n    #getRequestForProfileURL = (id) => `${this.#lernappServerBaseURL}/request_for_profile/${id}`;\r\n    #getRequestForGroupURL = (id) => `${this.#lernappServerBaseURL}/request_for_groups/${id}`;\r\n    // #deleteRequestURL = (id1,id2) => `${this.#lernappServerBaseURL}/delete_request/${id1}/requested_by/${id2}`;\r\n    #addRequestURL = () => `${this.#lernappServerBaseURL}/requests`;\r\n    #getAllRequestURL = () => `${this.#lernappServerBaseURL}/requests`;\r\n    #deleteRequestURL = (id1) => `${this.#lernappServerBaseURL}/request/${id1}`;\r\n    #getProfileOfReqeustURL = (id) => `${this.#lernappServerBaseURL}/profile_of_request/${id}`;\r\n\r\n\r\n    //Chataccess\r\n\r\n    #addChataccessURL = () => `${this.#lernappServerBaseURL}/chataccess`;\r\n    #getAllChataccessURL = () => `${this.#lernappServerBaseURL}/chataccess`;\r\n    #getChataccessURL = (id) => `${this.#lernappServerBaseURL}/chataccess/${id}`;\r\n    #deleteChataccessURL = (id) => `${this.#lernappServerBaseURL}/chataccess/${id}`;\r\n    #updateChataccessURL = (id) => `${this.#lernappServerBaseURL}/chataccess/${id}`;\r\n\r\n    #getChataccessByRoomURL = (room) => `${this.#lernappServerBaseURL}/chataccess_member/${room}`;\r\n    #getChataccessByProfileURL = (id) => `${this.#lernappServerBaseURL}/chataccess_chats/${id}`;\r\n\r\n    #getGroupchatsByProfilURL = (id) => `${this.#lernappServerBaseURL}/chataccess_groupchat/${id}`;\r\n    #getSinglechatsByProfilURL = (id) => `${this.#lernappServerBaseURL}/chataccess_singlechat/${id}`;\r\n\r\n    #getChatpartnerURL = (room, id) => `${this.#lernappServerBaseURL}/chataccess_partner/${room}/profile/${id}`;\r\n\r\n    #deleteTargetedChataccessURL = (id, room) => `${this.#lernappServerBaseURL}/chataccess_delete/${id}/room/${room}`;\r\n\r\n    //Message\r\n\r\n    #addMessageURL = () => `${this.#lernappServerBaseURL}/message`;\r\n    #getAllMessageURL = () => `${this.#lernappServerBaseURL}/message`;\r\n    #getMessageURL = (id) => `${this.#lernappServerBaseURL}/message/${id}`;\r\n    #deleteMessageURL = (id) => `${this.#lernappServerBaseURL}/message/${id}`;\r\n    #updateMessageURL = (id) => `${this.#lernappServerBaseURL}/message/${id}`;\r\n    #getMessageByRoomURL = (room) => `${this.#lernappServerBaseURL}/chatroom_message/${room}`;\r\n\r\n    //Profile\r\n\r\n    #addProfileURL = () => `${this.#lernappServerBaseURL}/profile`;\r\n    #getProfileURL = (id) => `${this.#lernappServerBaseURL}/profile/${id}`;\r\n    #deleteProfileURL = (id) =>`${this.#lernappServerBaseURL}/profile/${id}`;\r\n    #updateProfileURL = (id) => `${this.#lernappServerBaseURL}/profile/${id}`;\r\n    #searchMemberURL = (memberName) => `${this.#lernappServerBaseURL}/profiles-by-name/${memberName}`;\r\n\r\n    //Matches\r\n    #getMatchesURL = (id) => `${this.#lernappServerBaseURL}/matches/${id}`;\r\n\r\n    //User\r\n    #getUserURL = (id) => `${this.#lernappServerBaseURL}/user/${id}`;\r\n\r\n\r\n    static getAPI() {\r\n        if (this.#api == null){\r\n            this.#api = new LernappAPI();}\r\n        return this.#api;\r\n    }\r\n\r\n\r\n\r\n    #fetchAdvanced = (url, init) => fetch(url,init)\r\n        .then(res => {\r\n                if (!res.ok) {\r\n                    throw Error(`${res.status} ${res.statusText}`);\r\n                }\r\n                return res.json();\r\n            }\r\n        )\r\n\r\n\r\n    getUserByGoogleUserId (id){\r\n        return this.#fetchAdvanced(this.#getUserURL(id))\r\n            .then((responseJSON) => {\r\n                let UserBOs = UserBO.fromJSON(responseJSON);\r\n                return new Promise (function(resolve){\r\n                console.log(UserBOs)\r\n                resolve(UserBOs);\r\n                })\r\n                })\r\n                }\r\n\r\n\r\n    getAllGroups() {\r\n        return this.#fetchAdvanced(this.#getAllGroupsURL())\r\n            .then((responseJSON) => {\r\n                let GroupBOs = GroupBO.fromJSON(responseJSON);\r\n                return new Promise(function (resolve) {\r\n                    resolve(GroupBOs);\r\n                })\r\n            })\r\n    }\r\n\r\n    getGroupsForProfile(id){\r\n        return this.#fetchAdvanced(this.#get_Groups_of_ProfileURL(id))\r\n            .then((responseJSON)=>{\r\n                let GroupBOs = GroupBO.fromJSON(responseJSON);\r\n                return new Promise(function (resolve){\r\n                    resolve(GroupBOs)\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n    //Chatroom Methoden\r\n\r\n    addChatroom(chatroom){\r\n        return this.#fetchAdvanced(this.#addChatroomURL(), {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain',\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(chatroom)\r\n        }).then((responseJSON) => {\r\n            let responseChatroom = ChatroomBO.fromJSON(responseJSON)[0];\r\n            return new Promise(function(resolve){\r\n                resolve(responseChatroom);\r\n            })\r\n        })\r\n    }\r\n\r\n    getAllChatroom(){\r\n        return this.#fetchAdvanced(this.#getAllChatroomURL()).then((responseJSON) => {\r\n            let responseChatroom = ChatroomBO.fromJSON(responseJSON);\r\n            return new Promise(function (resolve) {\r\n                resolve(responseChatroom)\r\n            })\r\n        })\r\n    }\r\n\r\n    getChatroom(chatroom){\r\n        return this.#fetchAdvanced(this.#getChatroomURL(chatroom)).then((responseJSON) => {\r\n            let responseChatroom = ChatroomBO.fromJSON(responseJSON)[0];\r\n            return new Promise(function(resolve) {\r\n                resolve(responseChatroom);\r\n            })\r\n        })\r\n    }\r\n\r\n    deleteChatroom(chatroom){\r\n        return this.#fetchAdvanced(this.#deleteChatroomURL(chatroom), {\r\n            method: 'DELETE'\r\n        }).them((responseJSON) => {\r\n            let responseChatroom = ChatroomBO.fromJSON(responseJSON)[0];\r\n            return new Promise(function(resolve){\r\n                resolve(responseChatroom);\r\n            })\r\n        })\r\n    }\r\n\r\n    updateChatroom(chatroom){\r\n        return this.#fetchAdvanced(this.#updateChatroomURL(chatroom), {\r\n            methode: 'PUT',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain',\r\n                'Content-type': 'application/json', \r\n            },\r\n            body: JSON.stringify(chatroom)\r\n        }).then((responseJSON) => {\r\n            let responseChatroom = ChatroomBO.fromJSON(responseJSON)[0];\r\n            return new Promise(function (resolve) {\r\n                resolve(responseChatroom);\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    getLatestChatroom(){\r\n        return this.#fetchAdvanced(this.#getLatestChatroomURL()).then((responseJSON) => {\r\n            let responseChatroom = ChatroomBO.fromJSON(responseJSON);\r\n            return new Promise(function (resolve) {\r\n                resolve(responseChatroom)\r\n            })\r\n        })\r\n    }\r\n\r\n    //Group\r\n\r\n    addGroup(groupBO) {\r\n        return this.#fetchAdvanced(this.#addGroupURL(), {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain',\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(groupBO)\r\n        }).then((responseJSON) => {\r\n            // We always get an array of CustomerBOs.fromJSON, but only need one object\r\n            let responseGroupBO = GroupBO.fromJSON(responseJSON)[0];\r\n            // console.info(accountBOs);\r\n            return new Promise(function (resolve) {\r\n                resolve(responseGroupBO);\r\n            })\r\n        })\r\n    }\r\n    \r\n    //Gruppenmitglied hinzufügen\r\n    addMember(chataccessMemberBO){\r\n        return this.#fetchAdvanced(this.#addMemberURL(), {\r\n          method: 'POST',\r\n          headers: {\r\n            'Accept': 'application/json, text/plain',\r\n            'Content-type': 'application/json',\r\n          },\r\n          body: JSON.stringify(chataccessMemberBO)\r\n        }).then((responseJSON) => {\r\n          // We always get an array of CustomerBOs.fromJSON, but only need one object\r\n          let responsechataccessBO = ChataccessBO.fromJSON(responseJSON)[0];\r\n          // console.info(accountBOs);\r\n          return new Promise(function (resolve) {\r\n            resolve(responsechataccessBO);\r\n          })\r\n        })\r\n      }\r\n    //Gruppe verlassen\r\n    leaveGroup(profileID) {\r\n        return this.#fetchAdvanced(this.#leaveGroupURL(profileID), {\r\n          method: 'DELETE'\r\n        }).then((responseJSON) => {\r\n          let responseChataccessBO = ChataccessBO.fromJSON(responseJSON)[0];\r\n          // console.info(accountBOs);\r\n          return new Promise(function (resolve) {\r\n            resolve(responseChataccessBO);\r\n          })\r\n        })\r\n      }\r\n    //Mitglieder für Gruppe finden\r\n    getMembersForGroup(roomID) {\r\n        return this.#fetchAdvanced(this.#getMembersForGroupURL(roomID))\r\n          .then((responseJSON) => {\r\n            let profileBOs = ProfileBO.fromJSON(responseJSON);\r\n            // console.info(accountBOs);\r\n            return new Promise(function (resolve) {\r\n              resolve(profileBOs);\r\n            })\r\n          })\r\n      }\r\n\r\n    //Mitglied nach Nachnamen suchen\r\n    searchMember(memberName) {\r\n        return this.#fetchAdvanced(this.#searchMemberURL(memberName)).then((responseJSON) => {\r\n          let memberBOs = ProfileBO.fromJSON(responseJSON);\r\n          // console.info(memberBOs);\r\n          return new Promise(function (resolve) {\r\n            resolve(memberBOs);\r\n          })\r\n        })\r\n      }\r\n      \r\n\r\n    updateGroup(groupBO){\r\n        return this.#fetchAdvanced(this.#updateGroupURL(groupBO.getID()), {\r\n            method: 'PUT',\r\n            headers: {\r\n              'Accept': 'application/json, text/plain',\r\n              'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(groupBO)\r\n      \r\n          }).then((responseJSON) => {\r\n            // We always get an array of CustomerBOs.fromJSON\r\n            let responsegroupBO = GroupBO.fromJSON(responseJSON)[0];\r\n            // console.info(accountBOs);\r\n            return new Promise(function (resolve) {\r\n              resolve(responsegroupBO);\r\n            })\r\n        })\r\n    }\r\n      \r\n    //Chataccess\r\n\r\n    //User erhält Zugriff auf einen Chat\r\n    addChataccess(chataccess){\r\n        return this.#fetchAdvanced(this.#addChataccessURL(), {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain',\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(chataccess)\r\n        }).then((responseJSON) => {\r\n            let responseChataccess = ChataccessBO.fromJSON(responseJSON)[0];\r\n            return new Promise(function(resolve){\r\n                resolve(responseChataccess);\r\n            })\r\n        })\r\n    }\r\n\r\n    getAllChataccess(){\r\n        return this.#fetchAdvanced(this.#getAllChataccessURL()).then((responseJSON) => {\r\n            let responseChataccess = ChataccessBO.fromJSON(responseJSON);\r\n            return new Promise(function (resolve) {\r\n                resolve(responseChataccess)\r\n            })\r\n        })\r\n    }\r\n\r\n    //einen Chataccess zurückgeben nach Id\r\n    getChataccess(id){\r\n        return this.#fetchAdvanced(this.#getChataccessURL(id)).then((responseJSON) => {\r\n            let responseChataccess = ChataccessBO.fromJSON(responseJSON)[0];\r\n            return new Promise(function(resolve) {\r\n                resolve(responseChataccess);\r\n            })\r\n        })\r\n    }\r\n\r\n    //Zugriff wegnehmen von einem User\r\n    deleteChataccess(chataccess){\r\n        return this.#fetchAdvanced(this.#deleteChataccessURL(chataccess), {\r\n            method: 'DELETE'\r\n        }).them((responseJSON) => {\r\n            let responseChataccess = ChataccessBO.fromJSON(responseJSON)[0];\r\n            return new Promise(function(resolve){\r\n                resolve(responseChataccess);\r\n            })\r\n        })\r\n    }\r\n\r\n    updateChataccess(chataccess){\r\n        return this.#fetchAdvanced(this.#updateChataccessURL(chataccess), {\r\n            method: 'PUT',\r\n            headers: {\r\n              'Accept': 'application/json, text/plain',\r\n              'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(chataccess)\r\n           \r\n          }).then((responseJSON) => { \r\n            let responseChataccess = ChataccessBO.fromJSON(responseJSON)[0];\r\n            return new Promise(function (resolve) {\r\n              resolve(responseChataccess);\r\n            })\r\n          })\r\n    }\r\n\r\n    getChataccessByRoom(room){\r\n        return this.#fetchAdvanced(this.#getChataccessByRoomURL(room)).then((responseJSON) => {\r\n            let responseChataccess = ChataccessBO.fromJSON(responseJSON);\r\n            return new Promise(function (resolve) {\r\n                resolve(responseChataccess);\r\n            })\r\n        })\r\n    }\r\n\r\n    getGroupchatsByProfil(id){\r\n        return this.#fetchAdvanced(this.#getGroupchatsByProfilURL(id)).then((responseJSON) => {\r\n            let responseChatroom = ChatroomBO.fromJSON(responseJSON);\r\n            return new Promise(function (resolve) {\r\n                resolve(responseChatroom);\r\n            })\r\n        })\r\n    }\r\n\r\n    getSinglechatsByProfil(id){\r\n        return this.#fetchAdvanced(this.#getSinglechatsByProfilURL(id)).then((responseJSON) => {\r\n            let responseChatroom = ChatroomBO.fromJSON(responseJSON);\r\n            return new Promise(function (resolve) {\r\n                resolve(responseChatroom);\r\n            })\r\n        })\r\n    }\r\n\r\n    getChatpartner(room, id){\r\n        return this.#fetchAdvanced(this.#getChatpartnerURL(room, id)).then((responseJSON) => {\r\n            let responseChataccess = ProfileBO.fromJSON(responseJSON);\r\n            return new Promise(function (resolve) {\r\n                resolve(responseChataccess);\r\n            })\r\n        })\r\n    }\r\n\r\n    getChataccessByProfile(id){\r\n    return this.#fetchAdvanced(this.#getChataccessByProfileURL(id)).then((responseJSON) => {\r\n        let responseChatroom = ChatroomBO.fromJSON(responseJSON);\r\n        return new Promise(function (resolve) {\r\n            resolve(responseChatroom);\r\n        })\r\n    })}\r\n\r\n    deleteTargetedChataccess(id, room){\r\n        return this.#fetchAdvanced(this.#deleteTargetedChataccessURL(id, room), {\r\n            method: 'DELETE'\r\n        }).then((responseJSON) => {\r\n            let responseChataccess = ChataccessBO.fromJSON(responseJSON)[0];\r\n            return new Promise(function (resolve) {\r\n                resolve(responseChataccess);\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    //alle Chataccess für einen Nutzer\r\n    // get_ChataccessForUser(profil){\r\n    //     return this.#fetchAdvanced(this.#get_ChataccesForUserURL(profil)).then((responseJSON) => {\r\n    //         let chataccesBOs = ChataccessBO.fromJSON(responseJSON);\r\n    //         return new Promise(function (resolve) {\r\n    //             resolve(chataccesBOs);\r\n    //         })\r\n    //     })\r\n    // }\r\n\r\n\r\n    getGroup(groupID) {\r\n        return this.#fetchAdvanced(this.#getGroupURL(groupID)).then((responseJSON) => {\r\n            let responseGroupBO = GroupBO.fromJSON(responseJSON)[0];\r\n            // console.info(responseGroupBO);\r\n            return new Promise(function (resolve) {\r\n                resolve(responseGroupBO);\r\n            })\r\n        })\r\n    }\r\n\r\n    //Message\r\n\r\n    addMessage(messageBO){\r\n        return this.#fetchAdvanced(this.#addMessageURL(), {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain',\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(messageBO)\r\n        }).then((responseJSON) => {\r\n            let responseMessage = MessageBO.fromJSON(responseJSON)[0];\r\n            return new Promise(function(resolve){\r\n                resolve(responseMessage);\r\n            })\r\n        })\r\n    }\r\n\r\n    getAllMessage(){\r\n        return this.#fetchAdvanced(this.#getAllMessageURL()).then((responseJSON) => {\r\n            let responseMessage = MessageBO.fromJSON(responseJSON);\r\n            return new Promise(function (resolve) {\r\n                resolve(responseMessage);\r\n            })\r\n        })\r\n    }\r\n\r\n    getMessage(message){\r\n        return this.#fetchAdvanced(this.#getMessageURL(message)).then((responseJSON) => {\r\n            let responseMessage = MessageBO.fromJSON(responseJSON)[0];\r\n            return new Promise(function(resolve) {\r\n                resolve(responseMessage);\r\n            })\r\n        })\r\n    }\r\n\r\n    deleteMessage(message){\r\n        return this.#fetchAdvanced(this.#deleteMessageURL(message), {\r\n            method: 'DELETE'\r\n        }).then((responseJSON) => {\r\n            let responseMessage = MessageBO.fromJSON(responseJSON)[0];\r\n            return new Promise(function(resolve){\r\n                resolve(responseMessage);\r\n            })\r\n        })\r\n    }\r\n\r\n    updateMessage(message){\r\n        return this.#fetchAdvanced(this.#updateMessageURL(message), {\r\n            method: 'PUT',\r\n            headers: {\r\n              'Accept': 'application/json, text/plain',\r\n              'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(message)\r\n           \r\n          }).then((responseJSON) => { \r\n            let responseMessage = MessageBO.fromJSON(responseJSON)[0];\r\n            return new Promise(function (resolve) {\r\n              resolve(responseMessage);\r\n            })\r\n          })        \r\n    }\r\n\r\n    getMessageByRoom(room){\r\n        return this.#fetchAdvanced(this.#getMessageByRoomURL(room)).then((responseJSON) => {\r\n            let responseMessage = MessageBO.fromJSON(responseJSON);\r\n            return new Promise(function (resolve) {\r\n                resolve(responseMessage);\r\n            })\r\n        })\r\n    }\r\n\r\n    //Profile\r\n\r\n    //Erstellen von Profil\r\n    addProfile(profileBO) {\r\n        return this.#fetchAdvanced(this.#addProfileURL(), {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain',\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(profileBO)\r\n        }).then((responseJSON) => {\r\n            // We always get an array of CustomerBOs.fromJSON, but only need one object\r\n            let responseProfileBO = ProfileBO.fromJSON(responseJSON)[0];\r\n            // console.info(accountBOs);\r\n            return new Promise(function (resolve) {\r\n                resolve(responseProfileBO);\r\n            })\r\n        })\r\n    }\r\n\r\n  //Updaten von Profil\r\n  updateProfile(profileBO) {\r\n    return this.#fetchAdvanced(this.#updateProfileURL(profileBO.getID()), {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Accept': 'application/json, text/plain',\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(profileBO)\r\n\r\n    }).then((responseJSON) => {\r\n      // We always get an array of CustomerBOs.fromJSON\r\n      let responseProfileBO = ProfileBO.fromJSON(responseJSON)[0];\r\n      // console.info(accountBOs);\r\n      return new Promise(function (resolve) {\r\n        resolve(responseProfileBO);\r\n      })\r\n    })\r\n  }\r\n  \r\n  //Profil des Users holen\r\n  getProfile(profileID) {\r\n    return this.#fetchAdvanced(this.#getProfileURL(profileID)).then((responseJSON) => {\r\n      let responseProfileBO = ProfileBO.fromJSON(responseJSON)[0];\r\n      // console.info(responseProfileBO);\r\n      return new Promise(function (resolve) {\r\n        resolve(responseProfileBO);\r\n      })\r\n    })\r\n  }\r\n  //Profil löschen\r\n  deleteProfile(profileID) {\r\n    return this.#fetchAdvanced(this.#deleteProfileURL(profileID), {\r\n      method: 'DELETE'\r\n    }).then((responseJSON) => {\r\n      let responseProfileBO = ProfileBO.fromJSON(responseJSON)[0];\r\n      // console.info(accountBOs);\r\n      return new Promise(function (resolve) {\r\n        resolve(responseProfileBO);\r\n      })\r\n    })\r\n  }\r\n\r\n  getMatches(profileID) {\r\n    return this.#fetchAdvanced(this.#getMatchesURL(profileID)).then((responseJSON) => {\r\n      let profileBOs = ProfileBO.fromJSON(responseJSON);\r\n      // console.info(profileBOs);\r\n      return new Promise(function (resolve) {\r\n        resolve(profileBOs);\r\n      })\r\n    })\r\n  }\r\n\r\n    getRequestForProfile(profileID) {\r\n        return this.#fetchAdvanced(this.#getRequestForProfileURL(profileID)).then((responseJSON) => {\r\n            let requestBOs = RequestBO.fromJSON(responseJSON);\r\n            // console.info(profileBO);\r\n            return new Promise(function (resolve) {\r\n                resolve(requestBOs);\r\n            })\r\n        })\r\n    }\r\n\r\n    getRequestForGroups(profileID) {\r\n        return this.#fetchAdvanced(this.#getRequestForGroupURL(profileID)).then((responseJSON) => {\r\n            let requestBO = RequestBO.fromJSON(responseJSON);\r\n            console.info(requestBO);\r\n            return new Promise(function (resolve) {\r\n                resolve(requestBO);\r\n            })\r\n        })\r\n    }\r\n\r\n    getAllRequests = () => {\r\n        return this.#fetchAdvanced(this.#getAllRequestURL())\r\n            .then((responseJSON) => {\r\n                let RequestBOs = RequestBO.fromJSON(responseJSON);\r\n                console.log(RequestBOs)\r\n                return new Promise(function (resolve) {\r\n                    resolve(RequestBOs);\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n    deleteRequest(ID1) {\r\n        return this.#fetchAdvanced(this.#deleteRequestURL(ID1), {\r\n            method: 'DELETE'\r\n        }).then((responseJSON) => {\r\n            let responseRequestBO = RequestBO.fromJSON(responseJSON)[0];\r\n            return new Promise(function (resolve) {\r\n                resolve(responseRequestBO);\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n\r\n    addRequest(requestBO){\r\n        return this.#fetchAdvanced(this.#addRequestURL(requestBO), {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain',\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(requestBO)\r\n        }).then((responseJSON) => {\r\n            let responseRequestBO = RequestBO.fromJSON(responseJSON);\r\n            return new Promise(function (resolve){\r\n                resolve(responseRequestBO);\r\n            })\r\n        })\r\n    }\r\n\r\n    // deleteRequest(requestID) {\r\n    //     return this.#fetchAdvanced(this.#deleteRequestURL(requestID), {\r\n    //         method: 'DELETE'\r\n    //     }).then((responseJSON) => {\r\n    //         let responseRequestBO = RequestBO.fromJSON(responseJSON)[0];\r\n    //         return new Promise(function (resolve) {\r\n    //             resolve(responseRequestBO);\r\n    //         })\r\n    //     })\r\n    // }\r\n\r\n    getProfileOfRequest(currentUser) {\r\n        return this.#fetchAdvanced(this.#getProfileOfReqeustURL(currentUser)).then((responseJSON) => {\r\n            let responseProfileBO = ProfileBO.fromJSON(responseJSON)[0];\r\n            // console.info(responseProfileBO);\r\n            return new Promise(function (resolve) {\r\n                resolve(responseProfileBO);\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n}","import React,{Component} from 'react';\r\nimport {Typography} from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport LernappAPI from '../../API/LernappAPI';\r\nimport RequestBO from './../../API/RequestBO';\r\n\r\n/**\r\n * In dieser Komponente werden die einzelnen Eigenschaften, wie Name, Vorname, Lernfrequenz, etc.\r\n * rausgeholt und die Methode addRequest wird hier definiert\r\n * \r\n * @author [Esra Özkul (geb.Copuro)](https://github.com/EsraCopuro)\r\n */\r\nclass MatchListEntry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        //die Matches werden als Profile geholt und die Request als Request\r\n        this.state={\r\n            matches: props.profiles,\r\n            request: props.request,\r\n\r\n            \r\n        };\r\n    }\r\n\r\n//Diese Funktion soll in MatchListEnty ermöglichen, dass der User eine Anfrage schicken kann \r\n//Diese werden im Datenbank request gespeichert\r\naddProfileRequest = () => {\r\n    let data = this.props.googleId;\r\n    let request_type = \"E\";\r\n    let groupid = 0;\r\n      let newRequest = new RequestBO(\r\n        this.state.matches.getID(), \r\n        data,\r\n        request_type,\r\n        groupid\r\n\r\n      )\r\n      LernappAPI.getAPI().addRequest(newRequest).then(console.log(newRequest))\r\n    } \r\n\r\n//In der Render-Methode werden die einzelnen Namen, Vorname, Lernfrequenz und andere Eigenschaften gerendert, aber auch\r\n//die Methode addProfileRequest aufgerufen\r\n    render() {\r\n        const{matches}=this.state;\r\n        \r\n        return(\r\n            <div>\r\n                \r\n                <Typography>\r\n                    {matches.getFirstname()}, {matches.getLastname()}, {matches.getLearnstyle()}, {matches.getStudytime()},\r\n                    {matches.getStudyplace()}, {matches.getStudyfrequence()}\r\n                 \r\n                <Button\r\n                 color='primary'  flex=\"flex-end\" onClick={this.addProfileRequest}>Anfrage senden\r\n                </Button>\r\n                \r\n                 \r\n                 </Typography>\r\n               \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MatchListEntry;\r\n\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, TextField, InputAdornment, IconButton, Grid, Typography } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\n// import LernappAPI from '../../API/LernappAPI';\r\nimport LernappAPI from '../../API/LernappAPI';\r\nimport MatchListEntry from './MatchListEntry';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n\r\n/**\r\n * In dieser Komponente werden die alle Matches für den CurrentUser angezeigt.\r\n * \r\n * \r\n * @author [Esra Özkul (geb.Copuro)](https://github.com/EsraCopuro)\r\n */\r\n\r\nclass MatchList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        //Eine leere INIT setzten für matches und der CurrentUser wurde gesetzt\r\n        this.state={\r\n            matches: []\r\n        };\r\n    }\r\n        //Lifecycle Methode wird aufgerufen, wenn die Komponente in den DOM Browser eingefügt wird\r\n        componentDidMount(){\r\n            this.getMatchmaker();\r\n        }\r\n        \r\n        \r\n    \r\n    // Die Funktion getMatchmaking() soll die matches anzeigen\r\n    getMatchmaker =() => {\r\n        let data = this.props.googleId\r\n        console.log(data)\r\n        LernappAPI.getAPI().getMatches(data).then(profileBOs =>\r\n            this.setState({\r\n                matches:  profileBOs,\r\n        \r\n            }))}\r\n\r\n    \r\n\r\n        \r\n    //Die Komponente die gerendert werden\r\n    render(){\r\n        const{matches}=this.state\r\n            return(\r\n                <div id='head'>\r\n                    <Grid item>\r\n                        <Typography id='title'>\r\n                            Hier sind deine Matches:\r\n                        </Typography>\r\n                    </Grid>\r\n                    {\r\n                        matches.map(profiles =>\r\n                            <MatchListEntry key={profiles.getID()} profiles={profiles} googleId={this.props.googleId}/>)\r\n                            \r\n                    }\r\n                    \r\n                </div>\r\n            )\r\n    }\r\n        \r\n}\r\n    \r\n\r\n\r\n// Komponenten-Style wird jetzt definiert\r\n//Das kann natürlich noch geändert werdeb\r\nconst styles = theme => ({\r\n    root:{\r\n        width: '100%'\r\n    }  \r\n});\r\n\r\n// //PropTypes\r\n// MatchList.PropTypes = {\r\n//     /** @ignore */\r\n//     classes: PropTypes.object.isRequired,\r\n//     /** @ignore */\r\n//     location: PropTypes.object.isRequired,\r\n// }\r\nexport default withStyles(styles)(MatchList);\r\n","import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport LernappAPI from '../../API/LernappAPI';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n/**\r\n * Löschdialog für das Löschen von Requests.\r\n *\r\n * @author [Khadidja Kebaili](https://github.com/KhadidjaKebaili)\r\n */\r\n\r\n\r\nclass DeleteRequest extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            deletingInProgress: false,\r\n            deletingError: null\r\n            \r\n        };\r\n    }\r\n\r\n    /**\r\n     * Löscht einen Einzel-Request mithilfe der RequestID. Setzt während eines erfolgreichen Löschvorgangs\r\n     * den deletingInProgress auf True, ansonsten verbleibend auf false wirft eine Fehlermeldung.\r\n     */\r\n\r\n    deleteRequest = () => {\r\n        let id = this.props.request.getID()\r\n        LernappAPI.getAPI().deleteRequest(id).then(request => {\r\n            this.setState({  //Setzt neuen State, wenn der request gefetcht wurde.\r\n                deletingInProgress: false, //Setzt Löschvorgang im State auf false.\r\n                deletingError: null        //Fehlermeldung auf null setzen.\r\n            })\r\n            this.props.onClose(this.props.request);\r\n        }).catch(e =>\r\n            this.setState({\r\n                deletingInProgress: false,//Bei fehlgeschlagenem Fetch-Vorgang wird Löschvorgang deaktiviert\r\n                deletingError: e          //Fehler wird in den State gesetzt.\r\n            })\r\n        );\r\n\r\n        // set loading to true\r\n        this.setState({\r\n            deletingInProgress: true, //Setzt Löschvorgang im State auf true.\r\n            deletingError: null       //Fehlermeldung auf null setzen.\r\n        });\r\n    }\r\n\r\n\r\n\r\n    deleteGroupRequest = () => {\r\n        LernappAPI.getAPI().deleteRequest(this.props.requestGroup.getID()).then(request => {\r\n            this.setState({  //Setzt neuen State, wenn der request gefetcht wurde.\r\n                deletingInProgress: false, //Setzt Löschvorgang im State auf false.\r\n                deletingError: null        //Fehlermeldung auf null setzen.\r\n            })\r\n            this.props.onClose(this.props.requestGroup);\r\n        }).catch(e =>\r\n            this.setState({// Reseten den State mit zurückgegebener Fehlermeldung\r\n                deletingInProgress: false, // Ladevorgang wird auf false gesetzt\r\n                deletingError: e          // Fehlermeldung wird zurückgegeben.\r\n            })\r\n        );\r\n\r\n        this.setState({\r\n            deletingInProgress: true,  //Setzt Löschvorgang im State auf true.\r\n            deletingError: null        //Fehlermeldung auf null setzen.\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Handelt den Abbruch des Löschvorgangs oder das Schließen des Dialogs nach erfolgreichen Löschung.\r\n     */\r\n    handleClose = () => {\r\n        this.props.onClose(null);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                {/*Dialog der geöffnet wird, wenn props.show auf True gesetzt wird. Beim Schließen\r\n                wird die handleClose-Methode ausgeführt.*/}\r\n                <Dialog open={this.props.show} onClose = {this.handleClose}>\r\n                    <DialogTitle id=\"alert-dialog-title\">Willst du wirklich die Anfrage löschen?</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            Wenn Sie auf Ablehnen klicken wird der Request für immer gelöscht\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color=\"primary\" onClick={this.handleClose}>\r\n                            Abbrechen\r\n                        </Button>\r\n                        {/*Bei Betätigung des Buttons, wird die Methode deleteRequest ausgeführt.*/}\r\n                        <Button color=\"primary\" onClick={this.deleteRequest}>\r\n                            Ja, Ablehnen\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }}\r\n\r\n\r\nexport default DeleteRequest;","import React,{Component} from 'react';\r\nimport {Typography} from '@material-ui/core';\r\nimport { Button, Tab, Tabs } from '@material-ui/core';\r\nimport LernappAPI from '../../API/LernappAPI';\r\nimport DeleteRequest from '../Dialog/DeleteRequest';\r\nimport {BrowserRouter as Router,\r\n    Switch, Route, Link as RouterLink} from \"react-router-dom\";\r\nimport ChatroomBO from '../../API/ChatroomBO';\r\nimport ChataccessBO from '../../API/ChataccessBO';\r\n\r\n/**\r\n * \r\n * Hier werden die einzelnen Requests für Profile geholt.\r\n * \r\n * \r\n * @author [Esra Özkul (geb.Copuro)](https://github.com/EsraCopuro)\r\n */   \r\nclass RequestListEntry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            request: props.requests,\r\n            showDeleteRequest: false,\r\n            tabindex: 0,\r\n            profileFirstName: null,\r\n            profileLastName: null,\r\n            profile: null,\r\n            newRoom: null,\r\n            googleId: props.googleId\r\n\r\n        };\r\n    }\r\n    //Nach dem der Request gelöscht wird, wird der Dialog geschlossen\r\n    deleteRequestDialogClosed = (request) => {\r\n        // Wenn Request nicht null, dann lösche diese\r\n        if (request) {\r\n            this.props.onRequestDeleted(request);\r\n        };\r\n\r\n        // Zeig den Dialog nicht mehr an\r\n        this.setState({\r\n            showDeleteRequest: false\r\n        });\r\n    }\r\n\r\n    //Die Methode stopPropagation() der Event-Schnittstelle verhindert die weitere \r\n    //Ausbreitung des aktuellen Ereignisses in der Erfassungs- und Bubbling-Phase.\r\n    deleteRequestButtonClicked = (event) => {\r\n        event.stopPropagation();\r\n        this.setState({\r\n            showDeleteRequest: true\r\n        });\r\n    }\r\n\r\n    //Hier werden die einzelnen Attribute aus dem Profil geholt\r\n    getProfileById= (id) =>{\r\n        LernappAPI.getAPI().getProfile(id).then(profileBO =>{\r\n            this.setState({\r\n                profile: profileBO,\r\n                profileLastName:profileBO.getLastname(),\r\n                profileFirstName:profileBO.getFirstname(),\r\n            }, function(){\r\n                var a\r\n            })\r\n        })\r\n    }\r\n\r\n    // newChat(data){\r\n    //     let room = new ChatroomBO(\r\n    //         'E'\r\n    //     );\r\n    //     LernappAPI.getAPI().addChatroom(room).then(console.log(room));\r\n    //     let access1 = new ChataccessBO(\r\n    //         this.props.googleId,\r\n    //         room.getID(),\r\n    //         'E'\r\n    //     );\r\n    //     LernappAPI.getAPI().addChataccess(access1).then(console.log(access1));\r\n    //     let access2 = new ChataccessBO(\r\n    //         data,\r\n    //         room.getID(),\r\n    //         'E'\r\n    //     );\r\n    //     LernappAPI.getAPI().addChataccess(access2).then(console.log(access2));\r\n    // }\r\n\r\n    newChat(){\r\n        let data = this.props.googleId\r\n        console.log(data)\r\n        let room = new ChatroomBO('E');\r\n        LernappAPI.getAPI().addChatroom(room).then(console.log(room));\r\n\r\n        LernappAPI.getAPI().getLatestChatroom().then(res => {\r\n            this.setState({\r\n                newRoom: res[0].getID()\r\n            }, function(){\r\n                let access = new ChataccessBO(\r\n                    data,\r\n                    this.state.newRoom,\r\n                    'E'\r\n                )\r\n                let access2 = new ChataccessBO(\r\n                    this.state.request.getRequestedBy(),\r\n                    this.state.newRoom,\r\n                    'E'\r\n                )\r\n                LernappAPI.getAPI().addChataccess(access).then(console.log(access))\r\n                LernappAPI.getAPI().addChataccess(access2).then(console.log(access2))\r\n            }, function(){\r\n                console.log(\"Ende\")\r\n            })\r\n        })\r\n    }\r\n\r\n    // ComponentDidMount() wird unmittelbar nach dem Mounten einer Komponente \r\n    //aufgerufen (in den Baum eingefügt)\r\n    componentDidMount() {\r\n        const {request} = this.state\r\n        this.getProfileById(request.getRequestedBy())\r\n    }\r\n\r\n\r\n    render() {\r\n        const{request}=this.state;\r\n        return(\r\n            <div>\r\n                <Typography>\r\n                    {this.state.profileFirstName } {this.state.profileLastName} möchte mit dir chatten!\r\n                    {/* <Tabs indicatorColor='primary' textColor='primary' centered value={this.state.tabindex} onChange={this.changeTab} >\r\n                        <Tab label='Annehmen' component={RouterLink} to={'/chats'} />\r\n                    </Tabs> */}\r\n                    <Button color=\"primary\" size=\"large\" onClick={this.newChat}>Annehmen</Button>\r\n                    <div className=\"DeleteButton\">\r\n                        <div className=\"RequestLöschen\">\r\n                            <Button color=\"primary\" size=\"large\" onClick={this.deleteRequestButtonClicked}> Ablehnen</Button>\r\n                        </div>\r\n                    <DeleteRequest deleteRequest = {this.deleteGroupRequest} show={this.state.showDeleteRequest} request={request} onClose={this.deleteRequestDialogClosed}/>\r\n                    </div>               \r\n                </Typography>           \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RequestListEntry;","import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport LernappAPI from '../../API/LernappAPI';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nclass DeleteRequest extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            deletingInProgress: false,\r\n            deletingError: null\r\n\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Löscht einen Gruppen-Request mithilfe der RequestID. Setzt während eines erfolgreichen Löschvorgangs\r\n     * den deletingInProgress auf True, ansonsten verbleibend auf false wirft eine Fehlermeldung.\r\n     */\r\n    deleteGroupRequest = () => {\r\n        LernappAPI.getAPI().deleteRequest(this.props.requestGroup.getID()).then(request => {\r\n            this.setState({  //Setzt neuen State, wenn der request gefetcht wurde.\r\n                deletingInProgress: false,   //Setzt Löschvorgang im State auf false.\r\n                deletingError: null         //Fehlermeldung auf null setzen.\r\n            })\r\n            // console.log(account);\r\n            this.props.onClose(this.props.requestGroup);\r\n        }).catch(e =>\r\n            this.setState({ // Reseten den State mit zurückgegebener Fehlermeldung\r\n                deletingInProgress: false, //Setzt Löschvorgang im State auf false.\r\n                deletingError: e           // Setzt die Fehlermeldung in den State.\r\n            })\r\n        );\r\n\r\n        // set loading to true\r\n        this.setState({\r\n            deletingInProgress: true,   //Setzt Löschvorgang im State auf true.\r\n            deletingError: null         //Fehlermeldung auf null setzen.\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Behandelt den Abbruch des Löschvorgangs oder das Schließen des Dialogs nach erfolgreichen Löschung.\r\n     */\r\n    handleClose = () => {\r\n        this.props.onClose(null);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                {/*Dialog der geöffnet wird, wenn props.show auf True gesetzt wird. Beim Schließen\r\n                wird die handleClose-Methode ausgeführt.*/}\r\n                <Dialog open={this.props.show} onClose = {this.handleClose}>\r\n                    <DialogTitle id=\"alert-dialog-title\">Willst du wirklich die Anfrage löschen?</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText id=\"alert-dialog-description\">\r\n                            Wenn Sie auf Ablehnen klicken wird der Request für immer gelöscht\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color=\"primary\" onClick={this.handleClose}>\r\n                            Abbrechen\r\n                        </Button>\r\n                        {/*Bei Betätigung des Buttons, wird die Methode deleteRequest ausgeführt.*/}\r\n                        <Button color=\"primary\" onClick={this.deleteGroupRequest}>\r\n                            Ja, Ablehnen\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }}\r\n\r\n\r\nexport default DeleteRequest;","import React,{Component} from 'react';\r\nimport {Typography} from '@material-ui/core';\r\nimport { Button } from '@material-ui/core';\r\nimport LernappAPI from '../../API/LernappAPI';\r\nimport RequestBO from '../../API/RequestBO';\r\nimport {BrowserRouter as Router,\r\n    Switch, Route, Link as RouterLink} from \"react-router-dom\";\r\nimport {Tab, Tabs } from '@material-ui/core';\r\nimport DeleteGroupRequest from \"./../Dialog/DeleteGroupRequest\"\r\n\r\n/**\r\n *\r\n * Hier werden die einzelnen Requests für die Gruppen gerendert\r\n * Mit bestimmten Eigenschaften wie Vorname und Nachname geholt\r\n *\r\n *\r\n * @author [Esra Özkul (geb.Copuro)](https://github.com/EsraCopuro)\r\n * @coauthor [Khadidja Kebaili] (https://github.com/khadidjakebaili)\r\n */\r\n\r\nclass RequestGroupListEntry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            requestGroup: props.requests,\r\n            showDeleteGroupRequest: false,\r\n            tabindex: 0,\r\n            group: \"\",\r\n            profileLastName: \"\",\r\n            profileFirstName:\"\",\r\n\r\n        };\r\n    }\r\n\r\n    //Nach dem der Request gelöscht wird, wird der Dialog geschlossen\r\n    deleteRequestDialogClosed = (requestGroup) => {\r\n        // Wenn Request nicht null, dann lösche diese\r\n        if (requestGroup) {\r\n            this.props.onGroupRequestDeleted(requestGroup);\r\n        };\r\n\r\n        // Zeig den Dialog nicht mehr an\r\n        this.setState({\r\n            showDeleteGroupRequest: false\r\n        });\r\n    }\r\n\r\n    //Die Methode stopPropagation() der Event-Schnittstelle verhindert die weitere\r\n    //Ausbreitung des aktuellen Ereignisses in der Erfassungs- und Bubbling-Phase.\r\n    deleteRequestButtonClicked = (event) => {\r\n        event.stopPropagation();\r\n        this.setState({\r\n            showDeleteGroupRequest: true\r\n        });\r\n    }\r\n    //Hier werden die Gruppen durch die GruppenID geholt\r\n    getGroupById= (id) =>{\r\n        LernappAPI.getAPI().getGroup(id).then(groupBO =>{\r\n            this.setState({\r\n                group:groupBO\r\n            })\r\n        })\r\n    }\r\n    //Hier werden die Profile durch die ProfileID geholt --> Vorname und Nachname\r\n    getProfileById= (id) =>{\r\n        LernappAPI.getAPI().getProfile(id).then(profileBO =>{\r\n            this.setState({\r\n                profileLastName:profileBO.getLastname(),\r\n                profileFirstName:profileBO.getFirstname(),\r\n            }, function(){\r\n                var a\r\n            })\r\n        })\r\n    }\r\n    // ComponentDidMount() wird unmittelbar nach dem Mounten einer Komponente\r\n    //aufgerufen (in den Baum eingefügt)\r\n    componentDidMount() {\r\n        this.getGroupById(this.props.requests.getGroupId())\r\n        this.getProfileById(this.props.requests.getRequestedBy())\r\n\r\n    }\r\n\r\n    render() {\r\n        const{requestGroup, showDeleteGroupRequest}=this.state;\r\n        return(\r\n            <div>\r\n                <Typography>\r\n                    Hey, {this.state.profileLastName} möchte in die Gruppe: {this.state.group.groupname}\r\n                 <Tabs indicatorColor='primary' textColor='primary' centered value={this.state.tabindex} onChange={this.changeTab} >\r\n                    <Tab label='Annehmen' component={RouterLink} to={'/chats'} /> \r\n                </Tabs>\r\n\r\n\r\n                <div className=\"DeleteButton\">\r\n                <div className=\"RequestLöschen\">\r\n                <Button color=\"primary\" size=\"large\" onClick={this.deleteRequestButtonClicked}> Ablehnen</Button>\r\n                </div>\r\n                <DeleteGroupRequest deleteGroupRequest ={this.deleteGroupRequest} show={this.state.showDeleteGroupRequest} requestGroup={requestGroup} onClose= {this.deleteRequestDialogClosed}/>\r\n                </div>\r\n                \r\n                </Typography>           \r\n            \r\n             </div>\r\n        );\r\n    }\r\n}\r\n\r\n// /** Component specific styles */\r\n// const styles = theme => ({\r\n//     root: {\r\n//         width: '100%'\r\n//     },\r\n//     buttonMargin: {\r\n//         marginRight: theme.spacing(2),\r\n//     },\r\n//     groupEntry: {\r\n//         fontSize: theme.typography.pxToRem(15),\r\n//         flexBasis: '33.33%',\r\n//         flexShrink: 0,\r\n//     }\r\n// });\r\n    \r\nexport default RequestGroupListEntry;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, Button, TextField, InputAdornment, IconButton, Grid, Typography } from '@material-ui/core';\r\nimport { withRouter } from 'react-router-dom';\r\nimport LernappAPI from '../../API/LernappAPI';\r\nimport RequestListEntry from './RequestListEntry';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RequestGroupListEntry from './RequestGroupListEntry';\r\n\r\n/**\r\n * \r\n * Hier werden die einzelnen Requests für die Gruppen und Profile gerendert\r\n * \r\n * \r\n * @author [Esra Özkul (geb.Copuro)](https://github.com/EsraCopuro)\r\n */\r\n\r\nclass RequestList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        //Eine leere INIT setzten für request\r\n        this.state={\r\n            request: [],\r\n            requestGroup: [],\r\n            groupRequests: null,\r\n            newRoom: null\r\n            \r\n            \r\n        };\r\n    }\r\n        //Lifecycle Methode wird aufgerufen, wenn die Komponente in den DOM Browser eingefügt wird\r\n        componentDidMount(){\r\n            this.getRequestForProfile();\r\n            this.getRequestForGroups();\r\n        }\r\n        //Durch requestAdded werden die Request in eienm Array gespeichert\r\n        requestAdded = (group) =>{\r\n            const newGroupList = this.state.groups.filter(groupFromState => groupFromState.getID());\r\n            this.setState({\r\n                groups: newGroupList,\r\n                filteredGroups: [...newGroupList]\r\n            });\r\n        }\r\n\r\n\r\n    // Die Funktion getRequest() soll die request anzeigen\r\n    getRequestForProfile =() => {\r\n        let data = this.props.googleId\r\n        LernappAPI.getAPI().getRequestForProfile(data).then(requestBOs =>\r\n            this.setState({\r\n                request:  requestBOs,\r\n        \r\n            }))}\r\n\r\n    //Die Funktion getRequest() soll die Request für die Gruppe anzeigen\r\n    getRequestForGroups = () => {\r\n        var res = []\r\n        let data = this.props.googleId\r\n        LernappAPI.getAPI().getRequestForGroups(data).then(requestBOs =>\r\n            this.setState({\r\n                requestGroup: requestBOs,\r\n            }))\r\n    }\r\n\r\n    //Die Request werden gefiltert/abgeglichen und in den in dem Array gespeichert\r\n    requestDeleted = request => {\r\n    const newRequestList = this.state.request.filter(requestFromState => requestFromState.getID() !== request.getID());\r\n    this.setState({\r\n        request: newRequestList,\r\n    });\r\n    }\r\n\r\n    //Die Request werden gefiltert/abgeglichen und in den in dem Array gespeichert\r\n    groupRequestDeleted = request => {\r\n        const newRequestList = this.state.requestGroup.filter(requestFromState => requestFromState.getID() !== request.getID());\r\n        this.setState({\r\n            requestGroup: newRequestList,\r\n        });\r\n    }\r\n\r\n\r\n    //Die Komponente die gerendert werden\r\n    render(){\r\n        const{request,requestGroup}=this.state\r\n            return(\r\n                <div id='head'>\r\n                    <Grid item>\r\n                        <Typography id='title'>\r\n                            Hier sind deine Anfragen:\r\n                        </Typography>\r\n                    </Grid>\r\n                    {\r\n                        request.map(requests =>\r\n                            <RequestListEntry key={requests.getID()} requests={requests} googleId={this.props.googleId} onRequestDeleted = {this.requestDeleted}/>)\r\n                            \r\n                    }\r\n\r\n                    <Typography>\r\n                        Hier sind deine Anfrage für Gruppen:\r\n                    </Typography>\r\n                    {\r\n                        requestGroup.map(requests =>\r\n                            <RequestGroupListEntry key={requests.getID()} requests={requests} onGroupRequestDeleted={this.groupRequestDeleted}/>)\r\n                    }\r\n            \r\n                </div>\r\n            )\r\n    }\r\n        \r\n}\r\n    \r\n\r\n\r\n// Komponenten-Style wird jetzt definiert\r\n//Das kann natürlich noch geändert werdeb\r\nconst styles = theme => ({\r\n    root:{\r\n        width: '100%'\r\n    }  \r\n});\r\n\r\nexport default withStyles(styles)(RequestList);","import React, { Component } from 'react';\r\nimport { withStyles,\r\n        ListItem,\r\n        Typography,\r\n        Button } from '@material-ui/core';\r\nimport LernappAPI from '../API/LernappAPI';\r\n\r\n/**\r\n * \r\n * @author [Ha Mi Duong](https://github.com/HamiDuong)\r\n */\r\n\r\nclass Message extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: ''\r\n        };\r\n    }\r\n\r\n    getUserName = () => {\r\n        LernappAPI.getAPI().getProfile(this.props.messages.get_profile_id()).then( profile =>\r\n            this.setState({\r\n                name: profile.getFirstname()\r\n            })\r\n        )\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.getUserName()\r\n    }\r\n\r\n    render(){\r\n        const {classes, messages} = this.props;\r\n        const {name} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <ListItem>\r\n                    <Typography className={classes.chatEntry}>\r\n                        {name} : {messages.get_text()}\r\n                    </Typography>\r\n                </ListItem>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%'\r\n    }\r\n})\r\n\r\n\r\nexport default withStyles(styles)(Message);","import React,  {Component} from 'react';\r\nimport { withStyles,\r\n        List} from '@material-ui/core';\r\nimport MessageBO from '../API/MessageBO';\r\nimport Message from './Message'\r\n\r\n/**\r\n * geöffneter Chat mit zugehörigen Nachrichten\r\n * \r\n * @author [Ha Mi Duong](https://github.com/HamiDuong)\r\n */\r\n\r\nclass Chatroom extends Component{\r\n    /**\r\n     * @param {[MessageBO]} messages - Nachrichten aus diesen Chatraum\r\n     * @param {string} newMessage - Nachricht in dem Sendefeld\r\n     * @param {boolean} loadingInProgress - Anzeige ob die Seite gerade ladet\r\n     * @param {} error - gibt Fehler an\r\n     * @param {int} roomnumber - Id des Raums \r\n     */\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            messages: props.messages,\r\n            newMessage: '',\r\n            loadingInProgress: false,\r\n            error: null,\r\n        }\r\n    }\r\n\r\n    // holt alle zugehörigen Nachrichten für einen Chatraum\r\n    // getMessages = () => {\r\n    //     LernappAPI.getAPI().getMessageByRoom(this.state.roomnumber).then(messageBOs =>\r\n    //         this.setState({\r\n    //             messages: messageBOs,\r\n    //             loadingInProgress: false,\r\n    //             error: null\r\n    //         })).catch(e =>\r\n    //             this.setState({\r\n    //                 messages: [],\r\n    //                 loadingInProgress: false,\r\n    //                 error: e\r\n    //             })\r\n    //         );\r\n    //     this.setState({\r\n    //         loadingInProgress: true,\r\n    //         error: null\r\n    //     });         \r\n    // }\r\n\r\n    // getUserNames = () => {\r\n    //     var map = new Map();\r\n    //     let msg = this.state.messages;\r\n    //     let ids = [];\r\n    //     msg.forEach(elem => {\r\n    //         ids.push(elem.get_profile_id());\r\n    //     });\r\n    //     let unique = [...new Set(ids)];\r\n    //     console.log(unique);\r\n\r\n    //     unique.forEach(id => {\r\n    //         LernappAPI.getAPI().getProfile(id).then( profile =>\r\n    //             map.set(id, profile.getFirstname())\r\n    //         )\r\n    //     });\r\n    // };\r\n\r\n    //componentDidMount(){\r\n        // etMessages wird alle 1000ms aufgerufen um einen aktuellen Chatverlauf zu ermöglichen\r\n        // this.interval = setInterval(() => this.getMessages(), 5000)\r\n        // this.getMessages();\r\n        // this.getUserNames();\r\n    //}\r\n\r\n    //Input wird zu MessageBO umgewandelt und an die Datenbank geschickt\r\n    // sendMessageButtonClicked = () => {\r\n    //     /**\r\n    //      * Curerent User\r\n    //      */\r\n    //     console.log(this.state.roomnumber)\r\n    //     let message = new MessageBO(\r\n    //         1,\r\n    //         this.state.roomnumber,\r\n    //         this.state.newMessage\r\n    //     )\r\n    //     LernappAPI.getAPI().addMessage(message).then(console.log(message));\r\n    // }\r\n\r\n    // // newMessage wird an die Eingabe im Inputfeld angepasst\r\n    // messageInputChange = e => {\r\n    //     const value = e.target.value\r\n    //     this.setState({\r\n    //         newMessage: value\r\n    //     })\r\n    // }\r\n\r\n    /**\r\n     * Rendermethode und alle Nachrichten als TextNodes in einen Div einfügen\r\n     * @param {[MessageBO]} msg - der Nachrichtenverlauf einen Chats\r\n     */\r\n    // renderMessage(msg){\r\n    //     var parent = document.getElementById(\"chat\")\r\n    //     if(parent != null){\r\n    //         while(parent.firstChild){\r\n    //             parent.removeChild(parent.firstChild);\r\n    //         }\r\n    //     }\r\n\r\n    //     msg.forEach(elem => {\r\n    //        var txt = elem.profile_id+\" : \"+elem.text;\r\n    //        var newdiv =  document.createElement(\"div\");\r\n    //        var content = document.createTextNode(txt)\r\n    //        newdiv.appendChild(content);\r\n    //        parent.appendChild(newdiv)\r\n    //     });\r\n\r\n    // }\r\n\r\n    // rendert die Komponente\r\n    render(){\r\n        const {newMessage, } = this.state;\r\n        const {classes, messages} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                <div id=\"chat\"/>\r\n\r\n                <List className={classes.messageHistory}>\r\n                    {\r\n                        messages.map(messages => <Message key={messages.getID()} messages={messages}/>)\r\n                    }\r\n                </List>\r\n                        {/* <TextField\r\n                            id='newMessage'\r\n                            type='text'\r\n                            variant=\"standard\"\r\n                            value={newMessage}\r\n                            defaultValue='Hier Nachricht eingeben'\r\n                            onChange={this.messageInputChange}>\r\n                        </TextField>\r\n                        <Button variant='contained' onClick={this.sendMessageButtonClicked} className={classes.sendButton} color='primary'>\r\n                            Senden\r\n                        </Button> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%'\r\n    }\r\n})\r\n\r\nexport default withStyles(styles)(Chatroom);","import React, {Component} from \"react\";\r\nimport Chatroom from './Chatroom';\r\nimport LernappAPI from \"../API/LernappAPI\";\r\nimport {withStyles,\r\n        Typography,\r\n        Accordion,\r\n        AccordionSummary,\r\n        AccordionDetails,\r\n        TextField,\r\n        Button,\r\n        List,\r\n        ListItem} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport MessageBO from \"../API/MessageBO\";\r\n\r\n/**\r\n * Die Einträge von der Komponente ChatList\r\n * Die Komponente wird als Accordion erstellt mit dem Chatraum im AccordionDetails\r\n * \r\n * @author [Ha Mi Duong](https://github.com/HamiDuong)\r\n */\r\n\r\nclass ChatlistEntry extends Component{\r\n    /**\r\n     * @param {ChatroomBO} chats - eine ChatroomBO\r\n     * @param {boolean} loadingInProgress - Anzeige ob die Seite gerade ladet\r\n     * @param {roomnumber} roomnumber- Id der ChatraumBO\r\n     * @param {string} name - Name des Chatraums -> wenn Gruppenchat = Gruppenname, sonst = Chatpartner\r\n     */\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            chats: props.chats,\r\n            loadingInProgress: false,\r\n            roomnumber: '',\r\n            newMessage: '',\r\n            name: '',\r\n            messages: []\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Gibt die Id des Chatraums wieder\r\n     */\r\n    // getRoomnumber = () => {\r\n    //     this.setState({\r\n    //         loadingInProgress: false,\r\n    //         roomnumber: this.state.chats.getID()\r\n    //     })\r\n    // }\r\n\r\n    /**\r\n     * Methode um den Namen der Chaträume zu bestimmen\r\n     * Bei einem Gruppenchatraum ist es der Gruppenname\r\n     * Bei einem Zweierchatraum ist es der Vorname der anderen Person\r\n     */\r\n    getNameOfChat = () => {\r\n        var roomtype = this.state.chats.getChatType();\r\n        let data = this.props.googleId\r\n        console.log(data)\r\n\r\n        if(roomtype == 'E'){\r\n            LernappAPI.getAPI().getChatpartner(data, this.state.chats.getID()).then( profile =>\r\n                this.setState({\r\n                    roomnumber: this.state.chats.getID(),\r\n                    name : profile[0].getFirstname()\r\n                })\r\n            )\r\n        }else if (roomtype == 'G'){\r\n            LernappAPI.getAPI().getGroup(this.state.chats.getID()).then(groupBO =>\r\n                this.setState({\r\n                    loadingInProgress: false,\r\n                    roomnumber: this.state.chats.getID(),\r\n                    name: groupBO.getGroupname()\r\n                })).catch(e =>\r\n                    this.setState({\r\n                        loadingInProgress: false,\r\n                        roomnumber: '',\r\n                        name: ''\r\n                }))\r\n            this.setState({\r\n                loadingInProgress: true\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Nachrichten eines Chats holen\r\n     * Hier wurde eine Callback Funktion benötigt, sonst wurde der State nicht geändert\r\n     */\r\n    getMessages = () => {\r\n        LernappAPI.getAPI().getMessageByRoom(this.state.chats.getID()).then(messageBOs =>\r\n            this.setState({\r\n                messages: messageBOs,                    \r\n            }, function(){\r\n                console.log(\"this.state.messages\")\r\n            }\r\n            )\r\n        );       \r\n    }\r\n\r\n    //Input wird zu MessageBO umgewandelt und an die Datenbank geschickt\r\n    sendMessageButtonClicked = () => {\r\n        let data = this.props.googleId\r\n        console.log(this.state.roomnumber)\r\n        let message = new MessageBO(\r\n            data,\r\n            this.state.roomnumber,\r\n            this.state.newMessage\r\n        )\r\n        LernappAPI.getAPI().addMessage(message).then(console.log(message));\r\n    }\r\n\r\n    // newMessage wird an die Eingabe im Inputfeld angepasst\r\n    messageInputChange = e => {\r\n        const value = e.target.value\r\n        this.setState({\r\n            newMessage: value\r\n        })\r\n    }    \r\n\r\n    componentDidMount(){\r\n        this.getNameOfChat()\r\n        this.interval = setInterval(() => this.getMessages(), 5000)\r\n    }\r\n\r\n    /**\r\n     * Rendern der Komponente\r\n     * Dabei besteht jeder Entry aus dem Namen des Chats und wenn man da Akkordion öffnet liegt der zugehörige Chatraum\r\n     */\r\n    render(){\r\n        const{roomnumber, name, messages, newMessage} = this.state;\r\n        const{classes} = this.props;\r\n\r\n        return(\r\n            <div>\r\n                <Accordion>\r\n                    <AccordionSummary expandIcon = {<ExpandMoreIcon/>}>\r\n                        <Typography>\r\n                            {roomnumber} : {name}\r\n                        </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <List>\r\n                            <ListItem>\r\n                                {<Chatroom roomnumber={roomnumber} messages={messages}/>}\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <div>\r\n                                    <TextField\r\n                                        id='newMessage'\r\n                                        type='text'\r\n                                        variant=\"standard\"\r\n                                        value={newMessage}\r\n                                        defaultValue='Hier Nachricht eingeben'\r\n                                        onChange={this.messageInputChange}>\r\n                                    </TextField>\r\n                                    <Button variant='contained' onClick={this.sendMessageButtonClicked} className={classes.sendButton} color='primary'>\r\n                                        Senden\r\n                                    </Button>\r\n                                </div>\r\n                            </ListItem>\r\n                        </List>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    sendButton: {\r\n        margin: '5px',\r\n        \r\n    }\r\n})\r\n\r\nexport default withStyles(styles)(ChatlistEntry);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, LinearProgress } from '@material-ui/core';\r\n\r\n/**\r\n * Shows a loading progress, if the show prop is true.\r\n *\r\n * @See See Materiel-UIs [Progress](https://material-ui.com/components/progress/)\r\n * @See See Materiel-UIs [LinearProgress](https://material-ui.com/api/linear-progress/)\r\n *\r\n * @author [Christoph Kunz](https://github.com/christophkunz)\r\n */\r\nclass LoadingProgress extends Component {\r\n\r\n    /** Renders the component */\r\n    render() {\r\n        const { classes, show } = this.props;\r\n\r\n        return (\r\n            show ?\r\n                <div className={classes.root}>\r\n                    <LinearProgress color='secondary' />\r\n                </div>\r\n                : null\r\n        );\r\n    }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(2),\r\n    }\r\n});\r\n\r\n/** PropTypes */\r\nLoadingProgress.propTypes = {\r\n    /** @ignore */\r\n    classes: PropTypes.object.isRequired,\r\n    /** If true, the loading progress is rendered */\r\n    show: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(LoadingProgress);\r\n","import React, {Component} from 'react';\r\nimport ChatListEntry from './ChatListEntry';\r\nimport LernappAPI from '../API/LernappAPI';\r\nimport LoadingProgress from './Dialog/LoadingProgress';\r\nimport {withStyles,\r\n        } from '@material-ui/core';\r\n\r\n/**\r\n * Zeigt alle zugreifbaren Chats des aktuellen Users\r\n * \r\n * @author [Ha Mi Duong](https://github.com/HamiDuong)\r\n */\r\n\r\nclass ChatList extends Component{\r\n    /**\r\n     * \r\n     * @param {[ChatroomBO]} chats - alle ChatroomBOs auf die der aktuelle User zugreifen kann \r\n     * @param {boolean} loadingInProgress - Anzeige ob die Seite gerade ladet\r\n     * @param {} error - gibt Fehler an \r\n    */\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            chats: [],\r\n            loadingInProgress: false,\r\n            error: null\r\n        }\r\n    }\r\n\r\n    // Chaträume des aktuellen Users holen\r\n    getChats = () => {\r\n        let data = this.props.googleId;\r\n        console.log(data);\r\n        LernappAPI.getAPI().getChataccessByProfile(data).then(ChatroomBOs =>\r\n            this.setState({\r\n                chats: ChatroomBOs,\r\n                loadingInProgress: false,\r\n                error: null,\r\n            })).catch(e =>\r\n                this.setState({\r\n                    chats: [],\r\n                    loadingInProgress: false,\r\n                    error: e,\r\n                })\r\n            )\r\n            this.setState({\r\n                loadingInProgress: true,\r\n                error: null,\r\n            })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getChats();\r\n    }\r\n\r\n    render(){\r\n        const {chats, loadingInProgress} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    chats.map( chats => <ChatListEntry key={chats.getID()} chats={chats} googleId={this.props.googleId}/>)\r\n                }\r\n                <LoadingProgress show={loadingInProgress}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(ChatList);","import React, { Component, createRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Popover, IconButton, Avatar, ClickAwayListener, withStyles, Typography, Paper, Button, Grid, Divider } from '@material-ui/core';\r\nimport firebase from 'firebase/app';\r\n\r\n/**\r\n * Shows a drop down list for the account infos and a possibility to log out. For closing the pop up menu if \r\n * the mouse is clicked outside the menu, the ClickAwayListener component is used.For logging out,\r\n * firebase.auth().signOut() method is used.\r\n * \r\n * @see See Material-UIs [Popover](https://material-ui.com/components/popover/)\r\n * @see See Material-UIs [ClickAwayListener](https://material-ui.com/components/click-away-listener/)\r\n * @see See Googles [firebase authentication](https://firebase.google.com/docs/web/setup)\r\n * @see See Googles [firebase API reference](https://firebase.google.com/docs/reference/js)\r\n * \r\n * @author [Christoph Kunz](https://github.com/christophkunz)\r\n */\r\nclass ProfileDropDown extends Component {\r\n\r\n  // a refernce to the avatar button\r\n  #avatarButtonRef = createRef();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Init the state\r\n    this.state = {\r\n      open: false,\r\n    }\r\n  }\r\n\r\n  /** Handles click events on the avatar button and toggels visibility */\r\n  handleAvatarButtonClick = () => {\r\n    this.setState({\r\n      open: !this.state.open\r\n    });\r\n  }\r\n\r\n  /** \r\n   * Handles click events from the ClickAwayListener.\r\n   * \r\n   * @see See Material-UIs [ClickAwayListener](https://material-ui.com/components/click-away-listener/)\r\n   */\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false\r\n    });\r\n  }\r\n\r\n  /** \r\n\t * Handles the click event of the sign in button and uses the firebase.auth() component to sign in.\r\n\t * \r\n\t * @see See Google [firebase.auth](https://firebase.google.com/docs/reference/js/firebase.auth.Auth)\r\n\t * @see See Google [firebase.auth().signOut](https://firebase.google.com/docs/reference/js/firebase.auth.Auth#signout)\r\n\t */\r\n  handleSignOutButtonClicked = () => {\r\n    firebase.auth().signOut();\r\n  }\r\n\r\n  /** Renders the profile drop down if a loggin user is given as a prop */\r\n  render() {\r\n    const { classes, user } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      user ?\r\n        <div>\r\n          <IconButton className={classes.avatarButton} ref={this.#avatarButtonRef} onClick={this.handleAvatarButtonClick}>\r\n            <Avatar src={user.photoURL} />\r\n          </IconButton>\r\n\r\n          <Popover open={open} anchorEl={this.#avatarButtonRef.current} onClose={this.handleClose}\r\n            anchorOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'left',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}>\r\n            <ClickAwayListener onClickAway={this.handleClose}>\r\n              <Paper className={classes.profileBox}>\r\n                <Typography align='center'>Hello</Typography>\r\n                <Divider className={classes.divider} />\r\n                <Typography align='center' variant='body2'>{user.displayName}</Typography>\r\n                <Typography align='center' variant='body2'>{user.email}</Typography>\r\n                <Divider className={classes.divider} />\r\n                <Grid container justify='center'>\r\n                  <Grid item>\r\n                    <Button color='primary' onClick={this.handleSignOutButtonClicked}>Logout</Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Paper>\r\n            </ClickAwayListener>\r\n          </Popover>\r\n        </div>\r\n        : null\r\n    )\r\n  }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n  avatarButton: {\r\n    float: 'right'\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  profileBox: {\r\n    padding: theme.spacing(1),\r\n    background: theme.palette.background.default,\r\n  }\r\n});\r\n\r\n/** PropTypes */\r\nProfileDropDown.propTypes = {\r\n  /** @ignore */\r\n  classes: PropTypes.object.isRequired,\r\n  /** The logged in firesbase user */\r\n  user: PropTypes.object,\r\n}\r\n\r\nexport default withStyles(styles)(ProfileDropDown)\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Paper, Typography, Tabs, Tab} from '@material-ui/core';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {BrowserRouter as Router,\r\n  Switch, Route, Link as RouterLink} from \"react-router-dom\";\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport ProfileDropDown from '../Dialog/ProfileDropDown';\r\n\r\n/**\r\n * \r\n * Hier wurde die Navigationsleiste definiert.\r\n * Die Tabs ermöglichen das Switchen zwischen zwischen den einzelnen Komponente.\r\n * \r\n * @author [Esra Özkul (geb.Copuro)](https://github.com/EsraCopuro)\r\n */\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      // Ein leerer INIT\r\n      this.state = {\r\n        tabindex: 0\r\n      };\r\n    }\r\n  \r\n   \r\n  /** Behandelt onChange-Ereignisse der Tabs-Komponente */ \r\n    changeTab = (e, newIndex) => {\r\n      this.setState({\r\n        tabindex: newIndex\r\n      })\r\n    };\r\n  \r\n    /** Rendert die Komponente */\r\n    render() {\r\n      const { user } = this.props;\r\n  \r\n      return (\r\n        <Paper variant='outlined' >\r\n          <ProfileDropDown user={user} />\r\n          <Typography variant='h3' component='h1' align='center'>\r\n            LernApp\r\n          </Typography>\r\n          \r\n          {\r\n            \r\n              <Tabs indicatorColor='primary' textColor='primary' centered value={this.state.tabindex} onChange={this.changeTab} >\r\n                <Tab label='Home' component={RouterLink} to={`/home`} />\r\n                <Tab label='Matchmaker' component={RouterLink} to={`/matchmaker`} />\r\n                <Tab label='Anfragen' component={RouterLink} to={`/request`} />\r\n                <Tab label='Chats' component={RouterLink} to={`/chats`} />\r\n                <Tab label='Gruppen' component={RouterLink} to={`/groups`} />\r\n                <Tab label='Meine Gruppen' component={RouterLink} to={`/mygroups`} />\r\n                <Tab label='Profil' component={RouterLink} to={`/profil`} />\r\n              </Tabs>\r\n              \r\n          }\r\n        </Paper>\r\n      )\r\n    }\r\n  }\r\n  \r\n  /** PropTypes */\r\n  Header.propTypes = {\r\n    /** The logged in firesbase user */\r\n    user: PropTypes.object,\r\n  }\r\n  \r\n  export default Header;\r\n\r\n        ","import React, { Component } from 'react';\r\nimport { withStyles, Typography } from '@material-ui/core';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Button } from '@material-ui/core';\r\nimport LernappAPI from \"../API/LernappAPI\";\r\nimport RequestBO from './../API/RequestBO';\r\n\r\n/**\r\n *\r\n * @author: Khadidja Kebaili\r\n * @coauthor: Esra Ö.\r\n */\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n        position: 'relative',\r\n        overflow: 'auto',\r\n        maxHeight: 300,\r\n    },\r\n    listSection: {\r\n        backgroundColor: 'inherit',\r\n    },\r\n    ul: {\r\n        backgroundColor: 'inherit',\r\n        padding: 0,\r\n    },\r\n}));\r\n\r\n\r\nclass GroupListEntry extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Init an empty state\r\n        this.state = {\r\n            groups: props.groups,\r\n            showAddGroup: false,\r\n            groupName: \"\",\r\n            groupID: \"\"\r\n        };\r\n    }\r\n\r\n    addGroupRequest = () => {\r\n        let data = this.props.googleId\r\n        let request_type = \"G\";\r\n        let newRequest = new RequestBO(\r\n            data,\r\n            this.state.groups.getAdmin(),\r\n            request_type,\r\n            this.props.groups.getID()\r\n        )\r\n        LernappAPI.getAPI().addRequest(newRequest).then(console.log(newRequest))\r\n\r\n    }\r\n\r\n    render() {\r\n        const{groups}=this.state;\r\n        return (\r\n            <div>\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel2a-content\"\r\n                        id=\"panel2a-header\"\r\n                    >\r\n                        <Typography>{groups.getGroupname()}</Typography>\r\n                        <Button color='primary' onClick={this.addGroupRequest}>\r\n                            Sende einen Request!\r\n                        </Button>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Typography>\r\n                            {groups.getDescription()}\r\n                        </Typography>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    buttonMargin: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    groupEntry: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(GroupListEntry);","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport LernappAPI from \"../../API/LernappAPI\";\r\nimport GroupBO from \"../../API/GroupBO\";\r\nimport {DialogContent, Dialog, DialogContentText, DialogActions, DialogTitle} from \"@material-ui/core\";\r\n\r\n/**\r\n * Dialog für das Erstellen einer neuen Gruppe. Der currentUser ist hierbei automatisch auch der Gruppenadmin.\r\n * Er kann einen Gruppennamen auswählen und eine Gruppenbeschreibung.\r\n *\r\n * @author: Khadidja Kebaili\r\n */\r\n\r\n\r\nclass AddGroup extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            groupname : \"\",\r\n            description: \"\",\r\n\r\n        };\r\n    }\r\n\r\n    //\r\n    handleChange = (e) =>{\r\n        this.setState({ [e.target.name] : e.target.value });}\r\n\r\n    //Fügt neue Gruppe hinzu, indem es die Werte des States in ein neues GroupBO umwandelt.\r\n    addGroup = () => {\r\n        var chatid = 1;\r\n        let data = this.props.googleId\r\n        let newGroup = new GroupBO(\r\n            this.state.groupname,\r\n            data,\r\n            this.state.description,\r\n            chatid);\r\n\r\n            LernappAPI.getAPI().addGroup(newGroup).then(console.log(newGroup));\r\n            this.handleClose()\r\n    }\r\n\r\n    //Behandelt die Schließung des Dialogs.\r\n    handleClose = () => {\r\n        this.props.onClose(null);\r\n    }\r\n\r\n    //Schließt den Gruppe-verlassen-Dialog\r\n    closeLeaveGroupDialog = (groups) => {\r\n        // if customer is not null, delete it\r\n        if (groups) {\r\n            this.props.groupAdded(groups);\r\n        };\r\n\r\n        // Don´t show the dialog\r\n        this.setState({\r\n            showLeaveGroup: false\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        let header = 'Erstelle deine eigene Lerngruppe!'\r\n        const {groupname, description} = this.state\r\n        return (\r\n            <div>\r\n                <Dialog open={this.props.show} onClose = {this.handleClose} >\r\n                    <DialogTitle>Erstelle deine eigene Lerngruppe</DialogTitle>\r\n                    <DialogContent>\r\n                <form onSubmit={this.addGroup}>\r\n                    <div>\r\n                        <div className=\"Groupname\"><TextField name=\"groupname\" label=\"Gruppenname\" variant=\"outlined\" value ={groupname} onChange={this.handleChange}/> </div>\r\n                        <div className=\"Description\"><TextField name=\"description\" label=\"Beschreibung\" variant=\"outlined\" value ={description} onChange={this.handleChange}/> </div>\r\n                    </div>\r\n                </form>\r\n                    </DialogContent>\r\n                <DialogActions>\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"large\" onClick={this.addGroup} color='primary'>\r\n                        Erstellen\r\n                    </Button>\r\n                    <Button onClick={this.handleClose}>Oder vlt doch nicht...</Button>\r\n                </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddGroup;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, ListItem } from '@material-ui/core';\r\nimport { Button, List } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport LernappAPI  from '../API/LernappAPI';\r\nimport GroupListEntryAll from './GroupListEntryAll';\r\nimport LoadingProgress from \"./Dialog/LoadingProgress\";\r\n// import ContextErrorMessage from \"./dialogs/ContextErrorMessage\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AddGroup from \"./Dialog/AddGroup\";\r\nimport DeleteRequest from \"./Dialog/DeleteRequest\";\r\n\r\n/**\r\n * @author: [Khadidja Kebaili]\r\n * @coauthor: [Lena Tolmatschow]\r\n */\r\n\r\nclass GroupList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Init the state\r\n        this.state = {\r\n            groups: [],\r\n            filteredGroups: [],\r\n            groupFilter: '',\r\n            loadingInProgress: false,\r\n            loadingError: null,\r\n            showAddGroup: false,\r\n        };\r\n    }\r\n    /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\r\n\r\n\r\n\r\n    /** Fetcht alle GroupBOs */\r\n    getAllGroups = () => {\r\n        LernappAPI.getAPI().getAllGroups().then(groupBOs =>\r\n            this.setState({  // Set new state when GroupBOs have been fetched\r\n                groups: groupBOs,\r\n                filteredGroups: [...groupBOs],\r\n                loadingInProgress: false,\r\n                loadingError: null\r\n            })).catch(e =>\r\n            this.setState({ // Reset state with error from catch\r\n                groups: [],\r\n                loadingInProgress: false,\r\n                loadingError: e\r\n            })\r\n        );\r\n        this.setState({\r\n            loadingInProgress: true,\r\n            loadingError: null\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllGroups();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n            if (prevState.groups !== this.state.groups) {\r\n                this.getAllGroups()\r\n                this.setState({\r\n                    loadingInProgress:false\r\n                })\r\n            }\r\n    }\r\n\r\n    filterFieldValueChange = event => {\r\n        const value = event.target.value.toLowerCase();\r\n        this.setState({\r\n            filteredGroups: this.state.groups.filter(group => {\r\n                let GroupNamecontainsValue = group.getGroupname().toLowerCase().includes(value);\r\n                return GroupNamecontainsValue\r\n            }),\r\n            groupFilter: value\r\n        });\r\n    }\r\n\r\n    addGroupButtonClicked = (event) => {\r\n        event.stopPropagation();\r\n        this.setState({\r\n            showAddGroup: true\r\n        });\r\n    }\r\n\r\n    addGroupDialogClosed = (group) => {\r\n        // if customer is not null, delete it\r\n        if (group) {\r\n            this.onAddGroup(group);\r\n        };\r\n\r\n        // Don´t show the dialog\r\n        this.setState({\r\n            showAddGroup: false\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    /** Renders the component */\r\n    render() {\r\n        const { groups, filteredGroups, groupFilter, loadingInProgress, loadingError} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Grid container spacing={1} justify='flex-start' alignItems='center'>\r\n                    <Grid item>\r\n                        <Typography>\r\n                            Filter group list by name:\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <TextField\r\n                            autoFocus\r\n                            fullWidth\r\n                            id='customerFilter'\r\n                            type='text'\r\n                            value={groupFilter}\r\n                            onChange={this.filterFieldValueChange}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs/>\r\n                </Grid>\r\n                {\r\n                    // Show the list of CustomerListEntry components\r\n                    // Do not use strict comparison, since expandedCustomerID maybe a string if given from the URL parameters\r\n                    filteredGroups.map(groups =>\r\n                        <GroupListEntryAll key={groups.getID()} groups={groups} googleId={this.props.googleId}/>)\r\n                }\r\n                {/*{groups.map(groups => <GroupListEntry key={groups.getID()} groups={groups}/>)}*/}\r\n                <LoadingProgress show={loadingInProgress} />\r\n                <Button color=\"primary\" size=\"large\" onClick={this.addGroupButtonClicked}> Hinzufügen</Button>\r\n                <div>\r\n                    <AddGroup addGroup = {this.addGroup} show={this.state.showAddGroup} groups={groups} googleId={this.props.googleId} onClose={this.addGroupDialogClosed}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    groupList: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    addGroupButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(3),\r\n        bottom: theme.spacing(1),\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(GroupList);\r\n\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport LernappAPI from \"../../API/LernappAPI\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\n/**\r\n * @author [Mihriban Dogan](https://github.com/mihriban-dogan)\r\n */\r\n\r\nclass LeaveGroup extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  //Aufruf bei Verlassen der Gruppe, der Chataccess der Person wird gelöscht mithilfe der Profilid und der Chatid\r\n    leaveGroup= () => {\r\n      let data = this.props.googleId\r\n      LernappAPI.getAPI().deleteTargetedChataccess(data, this.props.groups.getChatid()).then(this.props.onClose(this.props.groups))\r\n      };\r\n\r\n  //Aufruf bei Abbruch\r\n  handleClose = () => {\r\n    this.props.onClose(null);\r\n  }\r\n\r\n  render() {\r\n\r\n        return (\r\n          <div>\r\n            <Dialog open={this.props.show}>\r\n              <DialogTitle id=\"alert-dialog-title\">{\"Willst du wirklich die Gruppe verlassen?\"}</DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  Wenn du auf Verlassen klickst wirst du aus der Gruppe entfernt.\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button color=\"primary\" onClick={this.props.onClose} >\r\n                 Abbrechen\r\n                </Button>\r\n                <Button onClick={this.leaveGroup}color=\"primary\" autoFocus>\r\n                  Verlassen\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default LeaveGroup;\r\n","import React, { Component } from 'react';\r\nimport { withStyles, Button, ListItem, Typography } from '@material-ui/core';\r\nimport LoadingProgress from './Dialog/LoadingProgress';\r\n\r\n\r\n/**\r\n * @author [Mihriban Dogan](https://github.com/mihriban-dogan)\r\n */\r\n\r\nclass MemberListEntry extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      loadingInProgress: false,\r\n    };\r\n  }\r\n\r\n\r\n//Es werden die einzelnen Mitglieder gerendert \r\n  render() {\r\n    const { classes, members} =  this.props;\r\n    const { loadingInProgress} = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <ListItem>\r\n          <Typography className={classes.memberEntry}>\r\n              <b>Mitglied:</b> {members.getFirstname()}, {members.getLastname()} \r\n          </Typography>\r\n        </ListItem>\r\n        <ListItem>\r\n          <LoadingProgress show={loadingInProgress} />\r\n        </ListItem>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponente CSS  */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%'\r\n  }, \r\n  buttonMargin: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  memberEntry: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    flexBasis: '33.33%',\r\n    flexShrink: 0,\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(MemberListEntry);","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport LernappAPI from \"../../API/LernappAPI\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {IconButton, TextField, Typography, InputAdornment, MenuItem, Grid } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ChataccessBO from '../../API/ChataccessBO';\r\n\r\n/**\r\n * @author [Mihriban Dogan](https://github.com/mihriban-dogan)\r\n * Hinzufügen von Mitgliedern, in dem man nach dem Nachnamen eines Members sucht\r\n */\r\n\r\nclass AddMember extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n//Aufruf bei Abbruch\r\n  handleClose = (addmember) => {\r\n    this.props.onClose(addmember);\r\n  }\r\n\r\n  render() {\r\n    const {show, targetMember, selectedMember} = this.props;\r\n    \r\n\r\n    return (\r\n      show ?\r\n        <Dialog open={this.props.show}  maxWidth='md'>\r\n          <DialogTitle id='form-dialog-title'>Füge Mitglieder hinzu\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <form>\r\n              { \r\n                //Anzeigen des Textfeldes, wenn noch kein targetMember vorhanden ist \r\n                (targetMember.length === 0) ?\r\n                  <TextField autoFocus fullWidth margin='normal' type='text' required id='memberName' label='Nachname:'\r\n                    onChange={this.props.textFieldValueChange}\r\n                    onBlur={this.props.searchMember}\r\n                    InputProps={{\r\n                      endAdornment: <InputAdornment position='end'>\r\n                        <IconButton onClick={this.props.searchMember}>\r\n                          <SearchIcon />\r\n                        </IconButton>\r\n                      </InputAdornment>,\r\n                    }} />\r\n                  :\r\n                  <TextField select autoFocus fullWidth margin='normal' type='text' required id='memberName' label='Member name:'\r\n                  value={this.props.selectedMember}\r\n                  onChange={this.props.memberSelectionChange}>\r\n                  { // Anzeige der Suchergebnisse \r\n                    this.props.targetMember.map((member) => (\r\n                      <MenuItem key={member.getID()} value={member}>\r\n                        {member.getLastname()}, {member.getFirstname()}\r\n                      </MenuItem>\r\n                    ))\r\n                  }\r\n                </TextField>\r\n  }\r\n            </form>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button  onClick={this.handleClose} color='secondary'>\r\n              Cancel\r\n            </Button>\r\n            <Button disabled={!selectedMember} onClick={this.props.addMember} variant='contained' color='primary'>\r\n             Hinzufügen\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        : null\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddMember;\r\n","import React, { Component } from 'react';\r\nimport { withStyles, ListItem } from '@material-ui/core';\r\nimport { Button, List } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport LernappAPI from \"../API/LernappAPI\";\r\nimport LoadingProgress from './Dialog/LoadingProgress';\r\nimport MemberListEntry from './MemberListEntry';\r\nimport AddMember from './Dialog/AddMember';\r\nimport ChataccessBO from '../API/ChataccessBO'\r\n\r\n/**\r\n * @author [Mihriban Dogan](https://github.com/mihriban-dogan)\r\n */\r\n\r\nclass MemberList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Der State wird initialisiert mit der Memberliste, dem target und selectedMember\r\n    this.state = {\r\n      members: [],\r\n      loadingInProgress: false,\r\n      showAddMember: false,\r\n      memberName: '',\r\n      targetMember: [],\r\n      selectedMember: null,\r\n    };\r\n  }\r\n\r\n  /** Fetched die MemberBOs */\r\n  getMembers = () => {\r\n    LernappAPI.getAPI().getMembersForGroup(this.props.groups.getID()).then(profileBOs =>\r\n      this.setState({  // State wird gesetzt wenn die Members gefetched wurden\r\n        members: profileBOs,\r\n        loadingInProgress: false, // Ladebalken\r\n      })).catch(e =>\r\n        this.setState({ // State auf initial wert setzen bei Fehler\r\n          members: [],\r\n          loadingInProgress: false,\r\n        })\r\n      );\r\n    this.setState({\r\n      loadingInProgress: true,\r\n    });\r\n  }\r\n\r\n   /** Suche nach einem Member mithilfe des Nachnamenm, wird bei AddMember Dialog aufgerufen */\r\n   searchMember = async () => {\r\n    const { memberName } = this.state;\r\n    if (memberName.length > 0) {\r\n      try {\r\n        // Member laden\r\n        const member = await LernappAPI.getAPI().searchMember(memberName);\r\n\r\n        let selectedMember = null;\r\n\r\n        if (member.length > 0) {\r\n          selectedMember = member[0];\r\n        }\r\n        // Setzen des finalen states\r\n        this.setState({\r\n          targetMember: member,\r\n          selectedMember: selectedMember,\r\n        });\r\n      } catch (e) {\r\n        this.setState({\r\n          targetMember: [],              // Bei Fehler wieder auf initalwert setzen\r\n          selectedMember: null,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n   /** Behandeln des selektieren von Member beim Select Textfeld, wird bei AddMember Dialog aufgerufen */\r\n memberSelectionChange = (event) => {\r\n  this.setState({\r\n    selectedMember: event.target.value,\r\n  });\r\n}\r\n  /** Behandelt die Eingabe des Suchtextfeldes, wird bei AddMember Dialog aufgerufen */\r\n  textFieldValueChange = (event) => {\r\n    const val = event.target.value;\r\n    this.setState({\r\n      [event.target.id]: val\r\n    });\r\n  }\r\n\r\n  //Hinzufügen eines Members --> es wird ein Chataccess für diesen Member erstellt \r\n  addMember = () => {\r\n    let chattype = \"G\"\r\n      let newChataccess = new ChataccessBO(\r\n        this.state.selectedMember.getID(),\r\n        this.props.groups.getID(),\r\n        chattype\r\n      )\r\n      LernappAPI.getAPI().addMember(newChataccess).then(this.closeAddMemberDialog)\r\n    } \r\n\r\n  componentDidMount() {\r\n    this.getMembers();\r\n  }\r\n\r\n  //Aufruf, wenn der AddMember Button geklickt wurde, vom AddMemberDialog\r\n    addMemberButtonclicked = (event) => {\r\n      event.stopPropagation();\r\n      this.setState({\r\n        showAddMember: true\r\n      });\r\n    }\r\n\r\n    //Schließen des Dialogs, onclose von AddMember Dialog\r\n    closeAddMemberDialog = (addmember) => {\r\n        this.setState({\r\n        showAddMember: false\r\n      });\r\n      if (addmember) {\r\n        //Mitglied wurde hinzugefügt also lade die Members erneut, sodass der neue Member angezeigt wird\r\n        this.getMembers();\r\n        this.setState({\r\n          memberName: '',\r\n          targetMember: [],\r\n          selectedMember: null,\r\n        })\r\n      }\r\n    }\r\n\r\n \r\n  render() {\r\n    const { classes, groups } = this.props;\r\n    const { members, loadingInProgress} = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <List className={classes.accountList}>\r\n          { // Einzelne Member als Props weitergeben\r\n            members.map(members=> <MemberListEntry key={members.getID()} groups={groups} members={members}\r\n               />)\r\n          }\r\n          <ListItem>\r\n            <LoadingProgress show={loadingInProgress} />\r\n          </ListItem>\r\n        </List>\r\n        <Button className={classes.addMemberButton} variant='contained' color='primary' startIcon={<AddIcon />} onClick={this.addMemberButtonclicked}>\r\n          Add Member\r\n        </Button>\r\n        <AddMember show={this.state.showAddMember} groups={groups} \r\n        addMember={this.addMember} textFieldValueChange={this.textFieldValueChange} \r\n        searchMember={this.searchMember} memberSelectionChange={this.memberSelectionChange}\r\n        memberName={this.state.memberName} targetMember={this.state.targetMember} selectedMember={this.state.selectedMember}\r\n        onClose={this.closeAddMemberDialog}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** Komponente CSS */\r\nconst styles = theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  accountList: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  addMemberButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(3),\r\n    bottom: theme.spacing(1),\r\n  }\r\n});\r\n\r\n\r\nexport default withStyles(styles)(MemberList);","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport GroupBO from '../../API/GroupBO';\r\nimport LernappAPI from '../../API/LernappAPI';\r\n\r\n/**\r\n * @author [Mihriban Dogan](https://github.com/mihriban-dogan)\r\n */\r\n\r\nclass GroupEditDialog extends Component {\r\n    constructor(props){\r\n    super(props);\r\n\r\n    let groupname = '', admin = '', description='', chatid = '';\r\n\r\n    //Wenn eine Gruppe schon vorhanden ist dann setze dies als initialstate\r\n    if (props.groups) {\r\n      groupname= props.groups.getGroupname();\r\n      admin = props.groups.getAdmin();\r\n      description = props.groups.getDescription();\r\n      chatid = props.groups.getChatid();\r\n    }\r\n    this.state = {\r\n      groupname: groupname,\r\n      admin: admin,\r\n      description: description,\r\n      chatid: chatid\r\n    };\r\n    //Basestate wird für Abbruch gespeichert\r\n    this.baseState = this.state;\r\n  }\r\n\r\n\r\n  //Updaten der Gruppe, wird mit Klick auf Bearbeiten aufgerufen\r\n  updateGroup = () => {\r\n    let updatedGroup = Object.assign(new GroupBO(), this.props.groups);\r\n    updatedGroup.setGroupname(this.state.groupname);\r\n    updatedGroup.setAdmin(parseInt(this.state.admin));\r\n    updatedGroup.setDescription(this.state.description);\r\n    updatedGroup.setChatid(this.state.chatid)\r\n    LernappAPI.getAPI().updateGroup(updatedGroup).then(group => {\r\n    \r\n      this.baseState.groupname = this.state.groupname;\r\n      this.baseState.admin = this.state.admin;\r\n      this.baseState.description = this.state.description;\r\n      this.baseState.chatid = this.state.chatid\r\n      this.props.onClose(updatedGroup);      \r\n    })}\r\n\r\n//Behandelt die Eingabe der Textfelder\r\nhandleChange = (e) =>{\r\n   this.setState({ [e.target.name] : e.target.value });}\r\n\r\n  //Wird bei Klick auf Abbrechen aufgerufen\r\n  handleClose = () => {\r\n    this.props.onClose(null);\r\n  }\r\n  render() { \r\n      const { classes, show} = this.props \r\n    \r\n    return ( \r\n        show ?\r\n      \r\n        <Dialog open={show} onClose={this.handleClose} maxWidth='xs'>\r\n          <DialogContent>\r\n            <DialogTitle>\r\n             <h2>Überarbeite dein Profil</h2>\r\n            </DialogTitle>\r\n            <form className={classes.root} noValidate autoComplete='off'>\r\n                <div className={classes.Box}>\r\n            <div  className={classes.Textfield}><TextField name=\"groupname\"  label=\"Gruppenname\" variant=\"outlined\" value ={this.state.groupname} onChange={this.handleChange}/></div>\r\n            <div  className={classes.Textfield}><TextField name=\"admin\" label=\"Admin\" variant=\"outlined\" value ={this.state.admin} onChange={this.handleChange}/> </div>\r\n            <div  className={classes.Textfield}><TextField name=\"description\" label=\"Beschreibung\" variant=\"outlined\" value ={this.state.description} onChange={this.handleChange} /></div>\r\n            </div>\r\n            </form>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <div className={classes.Button}>\r\n            <Button onClick={this.handleClose} color='secondary'>\r\n              Abbrechen\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"large\" onClick={this.updateGroup} color='primary'>\r\n              Bearbeiten\r\n            </Button>\r\n            </div>\r\n          </DialogActions>\r\n        </Dialog>\r\n        : null\r\n      );\r\n  }\r\n \r\n}\r\n   /** Komponente CSS */\r\n const styles = theme => ({\r\n        root: {\r\n        width: '100%',\r\n        margin: \"auto\"\r\n        },\r\n        Box:{\r\n            textAlign: \"center\"\r\n        },\r\n        Textfield:{\r\n            marginBottom: \"1ch\",\r\n            marginTop: \"1ch\",\r\n           \r\n        }, \r\n        Button:{\r\n           margin: \"auto\"\r\n        }\r\n     \r\n    });\r\nexport default withStyles(styles)(GroupEditDialog);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { withStyles, Typography } from '@material-ui/core';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Button } from '@material-ui/core';\r\nimport LeaveGroup from './Dialog/LeaveGroup';\r\nimport MemberList from \"./MemberList.js\"\r\nimport GroupEditDialog from './Dialog/GroupEditDialog';\r\n\r\n/**\r\n *\r\n * @author: Khadidja Kebaili\r\n * @coauthor: Mihriban Dogan\r\n */\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n        position: 'relative',\r\n        overflow: 'auto',\r\n        maxHeight: 300,\r\n    },\r\n    listSection: {\r\n        backgroundColor: 'inherit',\r\n    },\r\n    ul: {\r\n        backgroundColor: 'inherit',\r\n        padding: 0,\r\n    },\r\n}));\r\n\r\n\r\nclass GroupListEntry extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Init an empty state\r\n        this.state = {\r\n            groups: props.groups,\r\n            showLeaveGroup: false,\r\n            showAddGroup: false,\r\n            showGroupEditDialog: false,\r\n        };\r\n    }\r\n\r\n\r\n\r\n     leaveGroupclicked = (event) => {\r\n        event.stopPropagation();\r\n        this.setState({\r\n          showLeaveGroup: true\r\n        });\r\n      }\r\n    \r\n      closeLeaveGroupDialog = () => {\r\n          this.setState({\r\n          showLeaveGroup: false\r\n        });\r\n      }\r\n    \r\n    // addGroupRequest = () => {\r\n     //    let request_type = \"G\"\r\n     //    console.log(typeof(this.state.selectedMember))\r\n       //  let newRequest = new RequestBO (\r\n        //     this.state.selectedMember.getID(),\r\n        //     this\r\n       //  )\r\n    // }\r\n\r\n  editGroupButtonClicked = (event) => {\r\n        event.stopPropagation();\r\n        this.setState({\r\n          showGroupEditDialog: true\r\n        });\r\n      }\r\n\r\n  groupEditDialogClosed = (groups) => {\r\n        // customer is not null and therefor changed\r\n        if (groups) {\r\n          this.setState({\r\n            groups: groups,\r\n            showGroupEditDialog: false\r\n          });\r\n        } else {\r\n          this.setState({\r\n            showGroupEditDialog: false\r\n          });\r\n        }\r\n      }\r\n\r\n\r\n  closeLeaveGroupDialog = (groups) => {\r\n    // if customer is not null, delete it\r\n    if (groups) {\r\n      this.props.onLeaveGroup(groups);\r\n    };\r\n\r\n    // Don´t show the dialog\r\n    this.setState({\r\n      showLeaveGroup: false\r\n    });\r\n  }\r\n    render() {\r\n        const{groups}=this.state;\r\n\r\n        return (\r\n            <div>\r\n                <Accordion>\r\n                    <AccordionSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel2a-content\"\r\n                        id=\"panel2a-header\"\r\n                    >\r\n                        <Typography>{groups.getGroupname()}</Typography>\r\n                        <Button onClick={this.leaveGroupclicked} color='primary' >\r\n                          Gruppe Verlassen\r\n                        </Button>\r\n                        <Button color='primary' onClick={this.editGroupButtonClicked}>\r\n                           Gruppe bearbeiten\r\n                        </Button>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <Typography>\r\n                            {groups.getDescription()}\r\n                            {<MemberList  groups={groups} />}\r\n                        </Typography>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n             <LeaveGroup show={this.state.showLeaveGroup} groups={groups} googleId={this.props.googleId} onClose={this.closeLeaveGroupDialog}/>\r\n             <GroupEditDialog show = {this.state.showGroupEditDialog} groups={groups} onClose={this.groupEditDialogClosed} />\r\n             {/* Von Lena eingefügt addGroupRequest\r\n              <Button color='primary' startIcon={<AddIcon />} flex=\"flex-end\" onClick={this.addGroupRequest}>Anfrage senden\r\n             </Button>   */}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%'\r\n    },\r\n    buttonMargin: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    groupEntry: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        flexBasis: '33.33%',\r\n        flexShrink: 0,\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(GroupListEntry);","import React, { Component } from 'react';\r\nimport { withStyles, ListItem } from '@material-ui/core';\r\nimport LernappAPI  from '../API/LernappAPI';\r\nimport GroupListEntry from './GroupListEntry';\r\nimport LoadingProgress from \"./Dialog/LoadingProgress\";\r\n\r\n/**\r\n *\r\n * @author: Khadidja Kebaili\r\n * @coauthor: Mihriban Dogan\r\n */\r\n\r\nclass GroupListForProfile extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // Init the state\r\n        this.state = {\r\n            groups: [],\r\n            filteredGroups: [],\r\n            loadingInProgress: false,\r\n            loadingError: null,\r\n        };\r\n    }\r\n    /** Lifecycle method, which is called when the component gets inserted into the browsers DOM */\r\n\r\n    leaveGroup = groups => {\r\n        const newGroupList = this.state.groups.filter(groupFromState => groupFromState.getID() !== groups.getID());\r\n        this.setState({\r\n          groups: newGroupList,\r\n          filteredGroups:[...newGroupList]\r\n        });\r\n      }\r\n    \r\n\r\n    getGroupsForProfile = () => {\r\n        let data = this.props.googleId\r\n        LernappAPI.getAPI().getGroupsForProfile(data).then(groupBOs =>\r\n            this.setState({  // Set new state when GroupBOs have been fetched\r\n                groups: groupBOs,\r\n                filteredGroups: [...groupBOs],\r\n                loadingInProgress: false,\r\n                loadingError: null\r\n            })).catch(e =>\r\n            this.setState({ // Reset state with error from catch\r\n                groups: [],\r\n                loadingInProgress: false,\r\n                loadingError: e\r\n            })\r\n        );\r\n        this.setState({\r\n            loadingInProgress: true,\r\n            loadingError: null\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getGroupsForProfile()\r\n    }\r\n\r\n\r\n    /** Renders the component */\r\n    render() {\r\n        const { groups, filteredGroups, loadingInProgress, loadingError} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                {\r\n                    // Show the list of CustomerListEntry components\r\n                    // Do not use strict comparison, since expandedCustomerID maybe a string if given from the URL parameters\r\n                    filteredGroups.map(groups =>\r\n                        <GroupListEntry key={groups.getID()} groups={groups} googleId={this.props.googleId} onLeaveGroup={this.leaveGroup}\r\n                        />)\r\n                }\r\n                {/*{groups.map(groups => <GroupListEntry key={groups.getID()} groups={groups}/>)}*/}\r\n                <LoadingProgress show={loadingInProgress} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    groupList: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    addGroupButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(3),\r\n        bottom: theme.spacing(1),\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(GroupListForProfile);","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport LernappAPI from \"../../API/LernappAPI\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport firebase from 'firebase/app';\r\n\r\n/**\r\n * @author [Mihriban Dogan](https://github.com/mihriban-dogan)\r\n */\r\n\r\nclass DeleteProfile extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  //Löschen des Profils, wird bei Klick auf Löschen aufgerufen\r\n  deleteProfile = () => {\r\n    let data = this.props.googleId;\r\n    console.log(data);\r\n    LernappAPI.getAPI().deleteProfile(data).then(this.props.onClose(null));\r\n    firebase.auth().signOut();\r\n    };\r\n\r\n\r\n  render() {\r\n\r\n        return (\r\n          <div>\r\n            <Dialog open={this.props.show}>\r\n              <DialogTitle id=\"alert-dialog-title\">{\"Willst du wirklich dein Profil und dein Konto löschen?\"}</DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                  Wenn du auf Löschen klickst wird dein Konto in der Lernapp endgültig gelöscht. \r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button color=\"primary\" onClick={this.props.onClose} >\r\n                 Abbrechen\r\n                </Button>\r\n                <Button color=\"primary\" onClick={this.deleteProfile} autoFocus>\r\n                  Löschen\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default DeleteProfile;\r\n","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { FormControl } from '@material-ui/core';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\n\r\n/**\r\n * @author [Mihriban Dogan](https://github.com/mihriban-dogan)\r\n */\r\n\r\nclass UserProfileDialog extends Component {\r\n    constructor(props){\r\n    super(props);\r\n    }\r\n\r\n\r\n    //Aufruf bei Abbruch\r\n  handleClose = () => {\r\n    this.props.onClose(null);\r\n  }\r\n  render() { \r\n      const { classes, show} = this.props \r\n    \r\n    return ( \r\n        show ?\r\n        //Dialog mit Selects, Radio und Textfeldern\r\n        <Dialog open={show} onClose={this.handleClose} maxWidth='xs'>\r\n          <DialogContent>\r\n            <DialogTitle>\r\n             <h2>Überarbeite dein Profil</h2>\r\n            </DialogTitle>\r\n            <form className={classes.root} noValidate autoComplete='off'>\r\n            <div className=\"PersoProfil\" className={classes.PersoProfil}> \r\n            <div className=\"Textfield\" className={classes.Textfield}><TextField name=\"last_name\"  label=\"Name\" variant=\"outlined\" value ={this.props.last_name} onChange={this.props.handleChange}/></div>\r\n              <div className=\"Textfield\" className={classes.Textfield}><TextField name=\"first_name\" label=\"Vorname\" variant=\"outlined\" value ={this.props.first_name} onChange={this.props.handleChange}/> </div>\r\n              <div className=\"Textfield\" className={classes.Textfield}> <TextField name=\"age\" type=\"number\" label=\"Alter\" variant=\"outlined\" value ={this.props.age} onChange={this.props.handleChange}/> </div>\r\n              <FormControl className=\"Semester\" className=\"Select\" className={classes.Select}>\r\n              <InputLabel id=\"label\"> &nbsp; Semester</InputLabel>\r\n              <Select\r\n                    labelId=\"label\" id=\"select\"\r\n                    name=\"semester\" variant=\"outlined\" value={this.props.semester} \r\n                    onChange={this.props.handleChange}>\r\n                    <MenuItem value={1}>1.</MenuItem> \r\n                    <MenuItem value={2}>2.</MenuItem>\r\n                    <MenuItem value={3}>3.</MenuItem>\r\n                    <MenuItem value={4}>4.</MenuItem>\r\n                    <MenuItem value={5}>5.</MenuItem>\r\n                    <MenuItem value={6}>6.</MenuItem>\r\n                    <MenuItem value={7}>7.</MenuItem>\r\n              </Select>\r\n              </FormControl>\r\n              <FormControl className=\"Select\" className={classes.Select}>\r\n              <InputLabel id=\"label\"> &nbsp; Studiengang</InputLabel>\r\n              <Select\r\n                    labelId=\"label\" id=\"select\"\r\n                    name=\"major\" variant=\"outlined\" value={this.props.major} \r\n                    onChange={this.props.handleChange}>\r\n                    <MenuItem value={\"AM3\"}>AM3</MenuItem> \r\n                    <MenuItem value={\"AM7\"}>AM7</MenuItem>\r\n                    <MenuItem value={\"BI5\"}>BI5</MenuItem>\r\n                    <MenuItem value={\"BI7\"}>BI7</MenuItem>\r\n                    <MenuItem value={\"BM5\"}>BM5</MenuItem>\r\n                    <MenuItem value={\"CP3\"}>CP3</MenuItem>\r\n                    <MenuItem value={\"CR7\"}>CR7</MenuItem>\r\n                    <MenuItem value={\"CS3\"}>CS3</MenuItem>\r\n                    <MenuItem value={\"ID7\"}>ID7</MenuItem>\r\n                    <MenuItem value={\"IP7\"}>IP7</MenuItem>\r\n                    <MenuItem value={\"ME7\"}>ME7</MenuItem>\r\n                    <MenuItem value={\"MI7\"}>MI7</MenuItem>\r\n                    <MenuItem value={\"MM3\"}>MM3</MenuItem>\r\n                    <MenuItem value={\"MM7\"}>MM7</MenuItem>\r\n                    <MenuItem value={\"MP7\"}>MP7</MenuItem>\r\n                    <MenuItem value={\"MR3\"}>MR3</MenuItem>\r\n                    <MenuItem value={\"MW7\"}>MW7</MenuItem>\r\n                    <MenuItem value={\"OM7\"}>OM7</MenuItem>\r\n                    <MenuItem value={\"PD3\"}>PD3</MenuItem>\r\n                    <MenuItem value={\"CR7\"}>CR7</MenuItem>\r\n                    <MenuItem value={\"PM7\"}>PM7</MenuItem>\r\n                    <MenuItem value={\"PT7\"}>PT7</MenuItem>\r\n                    <MenuItem value={\"UK3\"}>UK3</MenuItem>\r\n                    <MenuItem value={\"CR7\"}>CR7</MenuItem>\r\n                    <MenuItem value={\"VT7\"}>VT7</MenuItem>\r\n                    <MenuItem value={\"CR7\"}>CR7</MenuItem>\r\n                    <MenuItem value={\"WI3\"}>WI3</MenuItem>\r\n                    <MenuItem value={\"WI7\"}>WI7</MenuItem>\r\n                    <MenuItem value={\"WM7\"}>WM7</MenuItem>\r\n              </Select>\r\n              </FormControl>\r\n              <div className=\"Textfield\" className={classes.Textfield}><TextField name=\"hobbies\" label=\"Hobbies\" variant=\"outlined\"value ={this.props.hobbies} onChange={this.props.handleChange}/></div>\r\n              <div className=\"Textfield\" className={classes.Textfield}><TextField name=\"interests\" label=\"Interessen\" variant=\"outlined\" value ={this.props.interests} onChange={this.props.handleChange}/></div>\r\n              <div className=\"radio\">\r\n              <FormLabel component=\"legend\">Personality (introvertiert 1 - extrovertiert 5)</FormLabel>\r\n                    <RadioGroup aria-label=\"Persönlichkeit\" name=\"personality\"  row  value={this.props.personality} onChange={this.props.handleChange} >\r\n                    <FormControlLabel value=\"1\" control={<Radio />} label=\"1\" />\r\n                    <FormControlLabel value=\"2\" control={<Radio />} label=\"2\" />\r\n                    <FormControlLabel value=\"3\" control={<Radio />} label=\"3\" />\r\n                    <FormControlLabel value=\"4\" control={<Radio />} label=\"4\"/>\r\n                    <FormControlLabel value=\"5\" control={<Radio />} label=\"5\" />\r\n                    </RadioGroup>\r\n              </div>\r\n              </div>\r\n              <div className=\"Lernoprofil\" className={classes.LernoProfil}>\r\n              <h2>Lernprofil</h2>\r\n              <FormControl className=\"Select\" className={classes.Select}>\r\n              <InputLabel> &nbsp; Lerntyp</InputLabel>\r\n              <Select\r\n                    name=\"learn_style\" variant=\"outlined\" value={this.props.learn_style} \r\n                    onChange={this.props.handleChange}>\r\n                    <MenuItem value={\"auditiv\"}>auditiv</MenuItem> \r\n                    <MenuItem value={\"kommunikativ\"}>kommunikativ</MenuItem>\r\n                    <MenuItem value={\"motorisch\"}>motorisch</MenuItem>\r\n                    <MenuItem value={\"visuell\"}>visuell</MenuItem>\r\n              </Select>\r\n              </FormControl>\r\n              <FormControl className=\"Select\" className={classes.Select}>\r\n              <InputLabel> &nbsp; Lernzeitraum</InputLabel>\r\n              <Select\r\n                    name=\"study_time\" variant=\"outlined\"\r\n                    value={this.props.study_time} \r\n                    onChange={this.props.handleChange}>\r\n                    <MenuItem value={\"Morgens\"}>Morgens</MenuItem> \r\n                    <MenuItem value={\"Mittags\"}>Mittags</MenuItem>\r\n                    <MenuItem value={\"Abends\"}>Abends</MenuItem>\r\n                    <MenuItem value={\"Flexibel\"}>Flexibel</MenuItem>\r\n              </Select>\r\n              </FormControl>\r\n              <FormControl className=\"Select\" className={classes.Select}>\r\n              <InputLabel> &nbsp; Lernort</InputLabel>\r\n                <Select\r\n                    name=\"study_place\" variant=\"outlined\"\r\n                    value={this.props.study_place} \r\n                    onChange={this.props.handleChange}>\r\n                    <MenuItem value={\"Universität\"}>Universität</MenuItem> \r\n                    <MenuItem value={\"Online Meetings\"}>Online Meetings</MenuItem>\r\n                </Select>\r\n                </FormControl>\r\n                <FormControl className=\"Select\" className={classes.Select}>\r\n                <InputLabel> &nbsp; Lernfrequenz</InputLabel>\r\n                <Select\r\n                    name=\"study_frequence\" variant=\"outlined\"\r\n                    value={this.props.study_frequence} \r\n                    onChange={this.props.handleChange}>\r\n                    <MenuItem value={1}>1x pro Woche</MenuItem> \r\n                    <MenuItem value={2}>2x pro Woche</MenuItem>\r\n                    <MenuItem value={3}>3x pro Woche</MenuItem>\r\n                    <MenuItem value={4}>4x pro Woche</MenuItem>\r\n                    <MenuItem value={5}>5x pro Woche</MenuItem>\r\n                    <MenuItem value={6}>6x pro Woche</MenuItem>\r\n                    <MenuItem value={7}>7x pro Woche</MenuItem>\r\n                </Select>\r\n                </FormControl>\r\n                <div className=\"Textfield\" className={classes.Textfield}><TextField name=\"work_experience\" label=\"Berufserfahrung\" variant=\"outlined\" value ={this.props.work_experience} onChange={this.props.handleChange} /></div>\r\n               </div>\r\n              </form>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color='secondary'>\r\n              Abbrechen\r\n            </Button>\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" size=\"large\" onClick={this.props.updateProfile} color='primary'>\r\n              Bearbeiten\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n        : null\r\n      );\r\n  }\r\n \r\n}\r\n   /** Komponente CSS*/\r\n const styles = theme => ({\r\n        root: {\r\n        width: '100%',\r\n        },\r\n        PersoProfil: {\r\n            borderRadius: \"25px\",\r\n            border: \"2px solid black\",\r\n            padding: \"5%\",\r\n            marginBottom: \"1ch\"\r\n        },\r\n        LernoProfil: {\r\n            borderRadius: \"25px\",\r\n            border: \"2px solid black\",\r\n            padding: \"5%\"\r\n        },\r\n        Textfield:{\r\n            marginBottom: \"1ch\",\r\n            marginTop: \"1ch\"\r\n        },\r\n        Select: {\r\n            marginTop: \"1ch\",\r\n            marginBottom: \"1ch\",\r\n            width: \"100%\"\r\n        }\r\n     \r\n    });\r\nexport default withStyles(styles)(UserProfileDialog);\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport LernappAPI from \"../../API/LernappAPI\";\r\nimport \"./ProfileOperations.css\"\r\nimport DeleteProfile from '../Dialog/DeleteProfile';\r\nimport UserProfileDialog from '../Dialog/UserProfileDialog';\r\nimport ProfileBO from '../../API/ProfileBO';\r\n\r\n/**\r\n * @author [Mihriban Dogan](https://github.com/mihriban-dogan)\r\n */\r\n\r\n\r\nclass ProfileOperations extends Component {\r\n  constructor(props){\r\n   super(props);\r\n\r\n   //Einzelne Bedeutung der Variablen, siehe ProfileBO\r\n    let fn = '', ln = '',  sem='', maj='', hob='', int = '',\r\n          pers='', lerns='', studyt='', studyp='', studyf = '', work='', age= 0;\r\n\r\n  this.state = { \r\n      profile: null,\r\n      showDeleteProfile: false,\r\n      showEditProfile: false,\r\n      last_name: ln,\r\n      first_name: fn,\r\n      age: age,\r\n      semester: sem,\r\n      major: maj,\r\n      hobbies: hob,\r\n      interests: int,\r\n      personality: pers,\r\n      learn_style: lerns,\r\n      study_time: studyt,\r\n      study_place: studyp,\r\n      study_frequence: studyf,\r\n      work_experience: work,\r\n   };\r\n   this.baseState = this.state;\r\n  }\r\n  componentDidMount() {\r\n    this.getProfile();\r\n  }\r\n\r\n\r\n  // doesProfileExist(){\r\n  //   if (LernappAPI.getAPI().getProfile(this.props.currentUser.getID())) {\r\n  //     this.getProfile()\r\n  //     //sollte umbenannt werden sonst kommt es zur Verwirrung zu getProfiles oder so\r\n  //   } else {\r\n  //     let newProfile = new ProfileBO(\r\n  //       this.state.currentUser.getID(),\r\n  //       this.state.last_name,\r\n  //       this.state.first_name,\r\n  //       this.state.age,\r\n  //       this.state.semester,\r\n  //       this.state.major,\r\n  //       this.state.hobbies,\r\n  //       this.state.interests,\r\n  //       this.state.personality,\r\n  //       this.state.learn_style,\r\n  //       this.state.study_time,\r\n  //       this.state.study_place,\r\n  //       this.state.study_frequence,\r\n  //       this.state.work_experience);\r\n  //     LernappAPI.getAPI().addProfile(newProfile)\r\n  //   }\r\n  // }\r\n\r\n  //Behandelt die Eingabe der Textfelder\r\n  handleChange = (e) =>{\r\n    this.setState({ [e.target.name] : e.target.value });}\r\n\r\n  //Fetched des Profils des CurrentUser\r\n  getProfile = () => {\r\n    let data = this.props.googleId\r\n    console.log(data)\r\n    LernappAPI.getAPI().getProfile(data).then(profile =>\r\n      this.setState({\r\n        profile: profile,\r\n        last_name: profile.getLastname(),\r\n        first_name: profile.getFirstname(),\r\n        age: profile.getAge(),\r\n        semester: profile.getSemester(),\r\n        major: profile.getMajor(),\r\n        hobbies:  profile.getHobbys(),\r\n        interests: profile.getInterests(),\r\n        personality: profile.getPersonality(),\r\n        learn_style:  profile.getLearnstyle(),\r\n        study_time: profile.getStudytime(),\r\n        study_place: profile.getStudyplace(),\r\n        study_frequence: profile.getStudyfrequence(),\r\n        work_experience: profile.getWorkexperience(),\r\n      }))\r\n\r\n  }\r\n  //Wird bei Klick auf Löschen aufgerufen\r\n  deleteButtonClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showDeleteProfile: true\r\n    });\r\n  }\r\n  //OnClose von Delete Profile Dialog\r\n  closeDeleteDialog = () => {\r\n      this.setState({\r\n      showDeleteProfile: false\r\n    });\r\n  }\r\n  //Wird bei Klick auf Bearbeiten aufgerufen\r\n  editButtonClicked = (event) => {\r\n    event.stopPropagation();\r\n    this.setState({\r\n      showEditProfile: true\r\n    });\r\n  }\r\n\r\n  // OnClose von UserProfileDialog\r\ncloseEditDialog = (profile) => {\r\n  if (profile) {\r\n    this.setState({\r\n      profile: profile,\r\n      showEditProfile: false\r\n    });\r\n  } else {\r\n    this.setState({\r\n      showEditProfile: false\r\n    });\r\n  }\r\n}\r\n\r\n\r\n//Updaten des Profils, wird mit Props an UserProfileDialog weitergegeben\r\nupdateProfile = () => {\r\n  // Klonen des originalen Profils, falls Backend Call fehlschlägt\r\n  let updatedProfile = Object.assign(new ProfileBO(), this.state.profile);\r\n  //Neues Profil setzen\r\n  updatedProfile.setLastname(this.state.last_name);\r\n  updatedProfile.setFirstname(this.state.first_name);\r\n  updatedProfile.setAge(parseInt(this.state.age));\r\n  updatedProfile.setSemester(this.state.semester);\r\n  updatedProfile.setMajor(this.state.major);\r\n  updatedProfile.setHobbys(this.state.hobbies);\r\n  updatedProfile.setInterests(this.state.interests);\r\n  updatedProfile.setPersonality(this.state.personality);\r\n  updatedProfile.setLearnstyle(this.state.learn_style);\r\n  updatedProfile.setStudytime(this.state.study_time); \r\n  updatedProfile.setStudyplace(this.state.study_place);\r\n  updatedProfile.setStudyfrequence(this.state.study_frequence);\r\n  updatedProfile.setWorkexperience(this.state.work_experience);\r\n\r\n  LernappAPI.getAPI().updateProfile(updatedProfile).then(console.log(updatedProfile)).then(profil => {\r\n    // Neuer State wird als basestate gesetzt\r\n    this.baseState.first_name = this.state.first_name;\r\n    this.baseState.last_name = this.state.last_name;\r\n    this.baseState.age =  this.state.age;\r\n    this.baseState.semester =  this.state.semester ;\r\n    this.baseState.major = this.state.major;\r\n    this.baseState.hobbies = this.state.hobbies;\r\n    this.baseState.interests =  this.state.interests;\r\n    this.baseState.personality = this.state.personality ;\r\n    this.baseState.learn_style =  this.state.learn_style;\r\n    this.baseState.study_time = this.state.study_time;\r\n    this.baseState.study_place = this.state.study_place;\r\n    this.baseState.study_frequence =  this.state.study_frequence;\r\n    this.baseState.work_experience = this.state.work_experience;\r\n    this.closeEditDialog(updatedProfile) // Dialog wird geschlossen\r\n  });\r\n}\r\n\r\n\r\n  render() { \r\n    const { profile, last_name, first_name, age, semester, major, hobbies, interests, personality, learn_style, study_time, study_place, study_frequence, work_experience} = this.state;\r\n    return ( \r\n      <div>\r\n      <div className=\"Profil\">\r\n      {\r\n         profile ?\r\n            <div>\r\n              <div className=\"PersProfil\">\r\n                <h2 className=\"header\">Persönliches Profil</h2>\r\n                <h3>Name: {profile.getLastname()}</h3> \r\n                <h3>Vorname: {profile.getFirstname()}</h3>\r\n                <h3>Alter: {profile.getAge()}</h3>\r\n                <h3>Semester: {profile.getSemester()}</h3>\r\n                <h3>Studiengang: {profile.getMajor()}</h3>\r\n                <h3>Hobbies: {profile.getHobbys()}</h3>\r\n                <h3>Interessen: {profile.getInterests()}</h3>\r\n                <h3>Persönlichkeit: {profile.getPersonality()} </h3>\r\n               </div>\r\n              <div className=\"Lernprofil\">\r\n                <h2>Lernprofil</h2> \r\n                <h3>Lerntyp: {profile.getLearnstyle()}</h3> \r\n                <h3>Lernfrequenz: {profile.getStudyfrequence()} x in der Woche</h3>\r\n                <h3>Lernzeitraum: {profile.getStudytime()}</h3>\r\n                <h3>Lernort:  {profile.getStudyplace()}</h3>\r\n                <h3>Berufserfahrung: {profile.getWorkexperience()}</h3>\r\n               </div>\r\n            </div>\r\n            : null\r\n        }\r\n        <div className=\"DeleteButton\">\r\n          <div className=\"KontoLöschen\"><Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={this.deleteButtonClicked}> Profil Löschen</Button></div>\r\n        <DeleteProfile show={this.state.showDeleteProfile} profile={profile} onClose={this.closeDeleteDialog} googleId={this.props.googleId}/>\r\n        </div>\r\n       </div>\r\n       <div className=\"Buttons\">\r\n       <div className=\"Bearbeiten\"><Button variant=\"contained\" color=\"primary\" size=\"large\" onClick={this.editButtonClicked}> Bearbeiten</Button></div>\r\n\t\t\t\t\t<UserProfileDialog onClose={this.closeEditDialog} show={this.state.showEditProfile} profile={profile} last_name={last_name} first_name={first_name} age = {age} semester ={semester}\r\n          major={major} hobbies={hobbies} interests={interests} personality={personality}\r\n          learn_style={learn_style}\r\n          study_time={study_time}\r\n          study_place={study_place}\r\n          study_frequence={study_frequence}\r\n          work_experience={work_experience} handleChange={this.handleChange} updateProfile={this.updateProfile}/>\r\n      </div>\r\n      </div>\r\n   \r\n      );\r\n  }\r\n}\r\n\r\nexport default ProfileOperations;\r\n","import React, { Component } from 'react';\r\nimport { Button, Grid, Typography, withStyles } from '@material-ui/core';\r\n\r\n  \r\nclass SignIn extends Component {\r\n\r\n\thandleSignInButtonClicked = () => {\r\n\t\tthis.props.onSignIn();\r\n\t}\r\n    \r\n\trender() {\r\n\t\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Typography  align='center'>Melde dich an :)</Typography>\r\n\t\t\t\t<Typography  align='center'>In wenigen Klicks gehts los!</Typography>\r\n\t\t\t\t<Grid container direction=\"column\"  justify=\"space-between\" alignItems=\"center\" spacing={2}>\r\n\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t<Button variant='contained' color='primary' onClick={this.handleSignInButtonClicked}>\r\n\t\t\t\t\t\t\tLogin\r\n      \t\t\t</Button>\r\n                \t</Grid> \r\n\t\t\t\t</Grid>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport default SignIn\r\n","\r\n\r\nconst firebaseConfig = {\r\n  \r\n    apiKey: \"AIzaSyC07dwVZT_jDC-NqfoywekF1Lwo497DAuk\",\r\n    authDomain: \"lernapp-44f86.firebaseapp.com\",\r\n    projectId: \"lernapp-44f86\",\r\n    storageBucket: \"lernapp-44f86.appspot.com\",\r\n    messagingSenderId: \"853505514910\",\r\n    appId: \"1:853505514910:web:7801af67a2b87f64da0a8f\"\r\n};\r\n \r\n\r\nexport default firebaseConfig;\r\n\r\n","import React, { Component } from 'react';\r\nimport { withStyles, Button } from '@material-ui/core';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport AlertTitle from '@material-ui/lab/AlertTitle';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\n\r\n/**\r\n * Shows an in-line error message in a given component context,\r\n * if the error obejct is not null\r\n *\r\n * @See See Material-UIs [Alert](https://material-ui.com/api/alert/)\r\n *\r\n * @author [Christoph Kunz](https://github.com/christophkunz)\r\n */\r\nclass ContextErrorMessage extends Component {\r\n    #standardText = 'This should not have happend. Soooo sorry...';\r\n\r\n    /** Renders the ContextErrorMessage if error object is not null  */\r\n    render() {\r\n        const { classes, error, contextErrorMsg, onReload } = this.props;\r\n\r\n        return (\r\n            (error !== null) ?\r\n                <Alert severity='error' className={classes.root}>\r\n                    <div>\r\n                        {this.#standardText}\r\n                    </div>\r\n                    <AlertTitle>\r\n                        {contextErrorMsg}\r\n                    </AlertTitle>\r\n                    <div className={classes.margins}>\r\n                        Error message (for debugging only) is:\r\n                    </div>\r\n                    <div>\r\n                        {error.message}\r\n                    </div>\r\n                    {\r\n                        onReload ?\r\n                            <div className={classes.margins}>\r\n                                <Button variant='contained' color='primary' startIcon={<AutorenewIcon />} onClick={onReload}>\r\n                                    Reload\r\n                                </Button>\r\n                            </div>\r\n                            : null\r\n                    }\r\n                </Alert>\r\n                : null\r\n        );\r\n    }\r\n}\r\n\r\n/** Component specific styles */\r\nconst styles = theme => ({\r\n    margins: {\r\n        marginTop: theme.spacing(2)\r\n    }\r\n});\r\n\r\nexport default withStyles(styles)(ContextErrorMessage);\r\n","import React from 'react';\r\nimport MatchList from './Components/Pages/MatchList';\r\nimport RequestList from './Components/Pages/RequestList';\r\nimport ChatList from './Components/ChatList';\r\nimport Header from './Components/Layout/Header';\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport { Container, ThemeProvider, CssBaseline } from '@material-ui/core';\r\n// import DeleteRequest from \"./Components/Dialog/DeleteRequest\";\r\nimport GroupList from \"./Components/GroupList\";\r\nimport GroupListForProfile from \"./Components/GroupListForProfile\";\r\nimport ProfileOperations from \"./Components/Pages/ProfileOperations\"\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport SignIn from './Components/Pages/SignIn';\r\nimport firebaseConfig from './firebaseConfig';\r\nimport ContextErrorMessage from \"./Components/Dialog/ContextErrorMessage\";\r\nimport LernappAPI from \"./API/LernappAPI\"\r\n\r\n/**\r\n * \r\n * Die einzelnen Komponente werden hier aufgerufen.\r\n * Dadurch können wir sie auf der Webseite anzeigen lassen.\r\n * \r\n * @author [Esra Özkul (geb.Copuro)](https://github.com/EsraCopuro)\r\n */\r\n\r\nclass App extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\t// Init an empty state\r\n\t\tthis.state = {\r\n\t\t\tcurrentUser: null,\r\n\t\t\tappError: null,\r\n\t\t\tauthError: null,\r\n\t\t\tauthLoading: false,\r\n\t\t\tgoogleId: null,\r\n\t\t};\r\n\t}\r\n\r\n\t/** \r\n\t * Create an error boundary for this app and recieve all errors from below the component tree.\r\n\t * \r\n\t * @See See Reacts [Error Boundaries](https://reactjs.org/docs/error-boundaries.html)\r\n \t */\r\n\tstatic getDerivedStateFromError(error) {\r\n\t\t// Update state so the next render will show the fallback UI.\r\n\t\treturn { appError: error };\r\n\t}\r\n\r\n\t/** Handles firebase users logged in state changes  */\r\n\thandleAuthStateChange = user => {\r\n\t\tif (user) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tauthLoading: true\r\n\t\t\t});\r\n\t\t\t// The user is signed in\r\n\t\t\tuser.getIdToken().then(token => {\r\n\t\t\t\t// Add the token to the browser's cookies. The server will then be\r\n\t\t\t\t// able to verify the token against the API.\r\n\t\t\t\t// SECURITY NOTE: As cookies can easily be modified, only put the\r\n\t\t\t\t// token (which is verified server-side) in a cookie; do not add other\r\n\t\t\t\t// user information.\r\n\t\t\t\tdocument.cookie = `token=${token};path=/`;\r\n\t\t\t\tconst uid = user.uid;\r\n\t\t\t\tconsole.log('IM HEEERRREEE')\r\n\t\t\t\tconsole.log(uid)\r\n\t\t\t\t// Set the user not before the token arrived\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcurrentUser: user,\r\n\t\t\t\t\tauthError: null,\r\n\t\t\t\t\tauthLoading: false,\r\n\t\t\t\t}, this.getUserId(uid)\r\n\t\t\t\t);\r\n\t\t\t}).catch(e => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tauthError: e,\r\n\t\t\t\t\tauthLoading: false\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t// User has logged out, so clear the id token\r\n\t\t\tdocument.cookie = 'token=;path=/';\r\n\r\n\t\t\t// Set the logged out user to null\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrentUser: null,\r\n\t\t\t\tauthLoading: false\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n  /** \r\n   * Handles the sign in request of the SignIn component uses the firebase.auth() component to sign in.\r\n\t * @see See Google [firebase.auth()](https://firebase.google.com/docs/reference/js/firebase.auth.Auth)\r\n\t * @see See Google [firebase.auth().signInWithRedirect](https://firebase.google.com/docs/reference/js/firebase.auth.Auth#signinwithredirect)\r\n\t */\r\n\thandleSignIn = () => {\r\n\t\tthis.setState({\r\n\t\t\tauthLoading: true\r\n\t\t});\r\n\t\tconst provider = new firebase.auth.GoogleAuthProvider();\r\n\t\tfirebase.auth().signInWithRedirect(provider);\r\n\t}\r\n\r\n\tgetUserId = (id) =>{\r\n\t\tLernappAPI.getAPI().getUserByGoogleUserId(id).then(userBO =>{\r\n\t\t\tthis.setState({\r\n\t\t\t\tgoogleId: userBO[0].getID()\r\n\t\t\t})\r\n\r\n\t\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Lifecycle method, which is called when the component gets inserted into the browsers DOM.\r\n\t * Initializes the firebase SDK.\r\n\t * \r\n\t * @see See Googles [firebase init process](https://firebase.google.com/docs/web/setup)\r\n\t */\r\n\tcomponentDidMount() {\r\n\t\tfirebase.initializeApp(firebaseConfig);\r\n\t\tfirebase.auth().languageCode = 'en';\r\n\t\tfirebase.auth().onAuthStateChanged(this.handleAuthStateChange);\r\n\t}\r\n\r\n//im ersten Schritt sollen die Matches und Navigation angezeigt werden.\r\n//Durch Redirect kann die URL weitergeleietet werden.\r\n//Route ermöglicht es dass eine bestimmte Path zugeordnet werden kann.\r\n  render(){\r\n    const { currentUser, appError, googleId} = this.state;\r\n    return(\r\n        <div>\r\n          <Router>\r\n            <Container maxWidth='md'>\r\n            < Container user={currentUser} />\r\n              <Header user={currentUser}/>\r\n              {\r\n                // Is a user signed in?\r\n\t\t\t\tcurrentUser ?\r\n                <>\r\n                  <Redirect from='/' to='home'/>\r\n\t\t\t\t  <Route path='/home'>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\tWillkommen in der Lernapp!<br/>\r\n\t\t\t\t\t\t\tNavigieren sie mit linker und rechter Pfeiltaste (sorry)\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path='/profil'>\r\n\t\t\t\t\t\t<ProfileOperations googleId= {googleId}/>\r\n\t\t\t\t\t</Route>\r\n                  <Route exact path='/request'>\r\n                    <RequestList googleId = {googleId}/>\r\n                  </Route>\r\n                  <Route exact path='/chats'>\r\n                    <ChatList googleId = {googleId}/>\r\n                  </Route>\r\n                  <Route path='/groups'>\r\n                      <GroupList googleId = {googleId}/>\r\n                  </Route>\r\n                  <Route path='/mygroups'>\r\n                      <GroupListForProfile googleId = {googleId}/>\r\n                  </Route>\r\n\t\t\t\t\t<Route exact path='/matchmaker'>\r\n\t\t\t\t\t\t<MatchList googleId = {googleId}/>\r\n\t\t\t\t\t</Route>\r\n                </>\r\n                :\r\n\t\t\t\t\t\t\t\t// else show the sign in page\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Redirect to='/index.html' />\r\n\t\t\t\t\t\t\t\t\t<SignIn onSignIn={this.handleSignIn} />\r\n\t\t\t\t\t\t\t\t</>\r\n              }\r\n\r\n            </Container>\r\n          </Router>\r\n\t\t\t<ContextErrorMessage error={appError} contextErrorMsg={`Something went wrong inside the app. Please reload the page.`} />\r\n          </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App; \r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import {BrowserRouter, Route, Redirect,Switch} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}